

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jun 14 15:01:37 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     001E                     _ADRESH	set	30
   169     001F                     _ADCON0bits	set	31
   170     001F                     _ADCON0	set	31
   171     0015                     _CCPR1L	set	21
   172     00FA                     _GO_DONE	set	250
   173     00BD                     _CCP1X	set	189
   174     00BC                     _CCP1Y	set	188
   175     0092                     _TMR2ON	set	146
   176     0091                     _T2CKPS1	set	145
   177     0090                     _T2CKPS0	set	144
   178     00BA                     _CCP1M2	set	186
   179     00BB                     _CCP1M3	set	187
   180     009E                     _ADRESL	set	158
   181     009F                     _ADCON1	set	159
   182     0092                     _PR2	set	146
   183     043A                     _TRISC2	set	1082
   184                           
   185                           	psect	cinit
   186     07FC                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FC                     __initialization:
   190     07FC                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     07FC                     __end_of__initialization:
   194     07FC  0183               	clrf	3
   195     07FD  120A  118A  2F96   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_PWM1_Init:
   200     0070                     ??_PWM1_Init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_ADC_Init:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ??_ADC_Init:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ?_ADC_Read:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 2 bytes @ 0x0
   217     0070                     	ds	2
   218     0072                     ??_ADC_Read:
   219                           
   220                           ; 1 bytes @ 0x2
   221     0072                     	ds	4
   222     0076                     ADC_Read@ANC:
   223                           
   224                           ; 1 bytes @ 0x6
   225     0076                     	ds	1
   226     0077                     ?_PWM1_SetDuty:
   227     0077                     PWM1_SetDuty@DC:	
   228                           ; 1 bytes @ 0x7
   229                           
   230                           
   231                           ; 2 bytes @ 0x7
   232     0077                     	ds	2
   233     0079                     ??_PWM1_SetDuty:
   234                           
   235                           ; 1 bytes @ 0x9
   236     0079                     	ds	2
   237     007B                     ??_main:
   238                           
   239                           ; 1 bytes @ 0xB
   240     007B                     	ds	1
   241                           
   242                           	psect	maintext
   243     0796                     __pmaintext:	
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 21 in file "main.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   258 ;; Tracked objects:
   259 ;;		On entry : B00/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   263 ;;      Params:         0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0
   265 ;;      Temps:          1       0       0       0       0
   266 ;;      Totals:         1       0       0       0       0
   267 ;;Total ram usage:        1 bytes
   268 ;; Hardware stack levels required when called: 1
   269 ;; This function calls:
   270 ;;		_ADC_Init
   271 ;;		_ADC_Read
   272 ;;		_PWM1_Init
   273 ;;		_PWM1_SetDuty
   274 ;; This function is called by:
   275 ;;		Startup code after reset
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279     0796                     _main:	
   280                           ;psect for function _main
   281                           
   282     0796                     l673:	
   283                           ;incstack = 0
   284                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   285                           
   286                           
   287                           ;main.c: 22:     PWM1_Init();
   288     0796  120A  118A  2766  120A  118A  	fcall	_PWM1_Init
   289                           
   290                           ;main.c: 23:     ADC_Init();
   291     079B  120A  118A  275D  120A  118A  	fcall	_ADC_Init
   292     07A0                     l675:
   293                           
   294                           ;main.c: 26:     {;main.c: 27:         PWM1_SetDuty(ADC_Read(0));
   295     07A0  3000               	movlw	0
   296     07A1  120A  118A  27BA  120A  118A  	fcall	_ADC_Read
   297     07A6  0871               	movf	?_ADC_Read+1,w
   298     07A7  00F8               	movwf	PWM1_SetDuty@DC+1
   299     07A8  0870               	movf	?_ADC_Read,w
   300     07A9  00F7               	movwf	PWM1_SetDuty@DC
   301     07AA  120A  118A  2775  120A  118A  	fcall	_PWM1_SetDuty
   302     07AF                     l677:
   303                           
   304                           ;main.c: 28:         _delay((unsigned long)((1)*(4000000/4000.0)));
   305     07AF  30C7               	movlw	199
   306     07B0  00FB               	movwf	??_main
   307     07B1                     u157:
   308     07B1  2FB2               	nop2
   309     07B2  0BFB               	decfsz	??_main,f
   310     07B3  2FB1               	goto	u157
   311     07B4  2FB5               	nop2
   312     07B5  2FB6               	nop2
   313     07B6  2FA0               	goto	l675
   314     07B7  120A  118A  2800   	ljmp	start
   315     07BA                     __end_of_main:
   316                           
   317                           	psect	text1
   318     0775                     __ptext1:	
   319 ;; *************** function _PWM1_SetDuty *****************
   320 ;; Defined at:
   321 ;;		line 49 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;  DC              2    7[COMMON] unsigned short 
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         2       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0
   337 ;;      Temps:          2       0       0       0       0
   338 ;;      Totals:         4       0       0       0       0
   339 ;;Total ram usage:        4 bytes
   340 ;; Hardware stack levels used: 1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348     0775                     _PWM1_SetDuty:	
   349                           ;psect for function _PWM1_SetDuty
   350                           
   351     0775                     l667:	
   352                           ;incstack = 0
   353                           ; Regs used in _PWM1_SetDuty: [wreg+status,2+status,0]
   354                           
   355                           
   356                           ;main.c: 49: void PWM1_SetDuty(uint16_t DC);main.c: 50: {;main.c: 52:     if(DC < 1024)
   357     0775  3004               	movlw	4
   358     0776  0278               	subwf	PWM1_SetDuty@DC+1,w
   359     0777  3000               	movlw	0
   360     0778  1903               	skipnz
   361     0779  0277               	subwf	PWM1_SetDuty@DC,w
   362     077A  1803               	skipnc
   363     077B  2F7D               	goto	u121
   364     077C  2F7E               	goto	u120
   365     077D                     u121:
   366     077D  2F95               	goto	l57
   367     077E                     u120:
   368     077E                     l669:
   369                           
   370                           ;main.c: 53:     {;main.c: 54:         CCP1Y = DC & 1;
   371     077E  1877               	btfsc	PWM1_SetDuty@DC,0
   372     077F  2F81               	goto	u131
   373     0780  2F85               	goto	u130
   374     0781                     u131:
   375     0781  1283               	bcf	3,5	;RP0=0, select bank0
   376     0782  1303               	bcf	3,6	;RP1=0, select bank0
   377     0783  1617               	bsf	23,4	;volatile
   378     0784  2F88               	goto	u144
   379     0785                     u130:
   380     0785  1283               	bcf	3,5	;RP0=0, select bank0
   381     0786  1303               	bcf	3,6	;RP1=0, select bank0
   382     0787  1217               	bcf	23,4	;volatile
   383     0788                     u144:
   384                           
   385                           ;main.c: 55:         CCP1X = DC & 2;
   386     0788  1297               	bcf	23,5	;volatile
   387     0789                     l671:
   388                           
   389                           ;main.c: 56:         CCPR1L = DC >> 2;
   390     0789  0878               	movf	PWM1_SetDuty@DC+1,w
   391     078A  00FA               	movwf	??_PWM1_SetDuty+1
   392     078B  0877               	movf	PWM1_SetDuty@DC,w
   393     078C  00F9               	movwf	??_PWM1_SetDuty
   394     078D  1003               	clrc
   395     078E  0CFA               	rrf	??_PWM1_SetDuty+1,f
   396     078F  0CF9               	rrf	??_PWM1_SetDuty,f
   397     0790  1003               	clrc
   398     0791  0CFA               	rrf	??_PWM1_SetDuty+1,f
   399     0792  0CF9               	rrf	??_PWM1_SetDuty,f
   400     0793  0879               	movf	??_PWM1_SetDuty,w
   401     0794  0095               	movwf	21	;volatile
   402     0795                     l57:
   403     0795  0008               	return
   404     0796                     __end_of_PWM1_SetDuty:
   405                           
   406                           	psect	text2
   407     0766                     __ptext2:	
   408 ;; *************** function _PWM1_Init *****************
   409 ;; Defined at:
   410 ;;		line 35 in file "main.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0
   427 ;;      Totals:         0       0       0       0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; This function calls:
   431 ;;		Nothing
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437     0766                     _PWM1_Init:	
   438                           ;psect for function _PWM1_Init
   439                           
   440     0766                     l611:	
   441                           ;incstack = 0
   442                           ; Regs used in _PWM1_Init: [wreg]
   443                           
   444                           
   445                           ;main.c: 38:     CCP1M3 = 1;
   446     0766  1283               	bcf	3,5	;RP0=0, select bank0
   447     0767  1303               	bcf	3,6	;RP1=0, select bank0
   448     0768  1597               	bsf	23,3	;volatile
   449                           
   450                           ;main.c: 39:     CCP1M2 = 1;
   451     0769  1517               	bsf	23,2	;volatile
   452                           
   453                           ;main.c: 40:     TRISC2 = 0;
   454     076A  1683               	bsf	3,5	;RP0=1, select bank1
   455     076B  1303               	bcf	3,6	;RP1=0, select bank1
   456     076C  1107               	bcf	7,2	;volatile
   457     076D                     l613:
   458                           
   459                           ;main.c: 42:     PR2 = 124;
   460     076D  307C               	movlw	124
   461     076E  0092               	movwf	18	;volatile
   462     076F                     l615:
   463                           
   464                           ;main.c: 44:     T2CKPS0 = 1;
   465     076F  1283               	bcf	3,5	;RP0=0, select bank0
   466     0770  1303               	bcf	3,6	;RP1=0, select bank0
   467     0771  1412               	bsf	18,0	;volatile
   468     0772                     l617:
   469                           
   470                           ;main.c: 45:     T2CKPS1 = 0;
   471     0772  1092               	bcf	18,1	;volatile
   472     0773                     l619:
   473                           
   474                           ;main.c: 47:     TMR2ON = 1;
   475     0773  1512               	bsf	18,2	;volatile
   476     0774                     l53:
   477     0774  0008               	return
   478     0775                     __end_of_PWM1_Init:
   479                           
   480                           	psect	text3
   481     07BA                     __ptext3:	
   482 ;; *************** function _ADC_Read *****************
   483 ;; Defined at:
   484 ;;		line 67 in file "main.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  ANC             1    wreg     unsigned char 
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  ANC             1    6[COMMON] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  2    0[COMMON] unsigned short 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, btemp+1
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         2       0       0       0       0
   499 ;;      Locals:         1       0       0       0       0
   500 ;;      Temps:          4       0       0       0       0
   501 ;;      Totals:         7       0       0       0       0
   502 ;;Total ram usage:        7 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511     07BA                     _ADC_Read:	
   512                           ;psect for function _ADC_Read
   513                           
   514                           
   515                           ;incstack = 0
   516                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
   517                           ;ADC_Read@ANC stored from wreg
   518     07BA  00F6               	movwf	ADC_Read@ANC
   519     07BB                     l651:
   520                           
   521                           ;main.c: 67: uint16_t ADC_Read(uint8_t ANC);main.c: 68: {;main.c: 70:     if(ANC<0 || AN
      +                          C>7)
   522     07BB  3008               	movlw	8
   523     07BC  0276               	subwf	ADC_Read@ANC,w
   524     07BD  1C03               	skipc
   525     07BE  2FC0               	goto	u81
   526     07BF  2FC1               	goto	u80
   527     07C0                     u81:
   528     07C0  2FC4               	goto	l657
   529     07C1                     u80:
   530     07C1                     l653:
   531                           
   532                           ;main.c: 71:         return 0;
   533     07C1  01F0               	clrf	?_ADC_Read
   534     07C2  01F1               	clrf	?_ADC_Read+1
   535     07C3  2FFB               	goto	l64
   536     07C4                     l657:
   537                           
   538                           ;main.c: 72:     ADCON0 &= 0b11000101;
   539     07C4  30C5               	movlw	197
   540     07C5  00FF               	movwf	btemp+1
   541     07C6  087F               	movf	btemp+1,w
   542     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   543     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   544     07C9  059F               	andwf	31,f	;volatile
   545                           
   546                           ;main.c: 73:     ADCON0 |= ANC<<3;
   547     07CA  0876               	movf	ADC_Read@ANC,w	;volatile
   548     07CB  00F2               	movwf	??_ADC_Read
   549     07CC  3002               	movlw	2
   550     07CD                     u95:
   551     07CD  1003               	clrc
   552     07CE  0DF2               	rlf	??_ADC_Read,f
   553     07CF  3EFF               	addlw	-1
   554     07D0  1D03               	skipz
   555     07D1  2FCD               	goto	u95
   556     07D2  1003               	clrc
   557     07D3  0D72               	rlf	??_ADC_Read,w
   558     07D4  00FF               	movwf	btemp+1
   559     07D5  087F               	movf	btemp+1,w
   560     07D6  049F               	iorwf	31,f	;volatile
   561     07D7                     l659:
   562                           
   563                           ;main.c: 75:     _delay((unsigned long)((30)*(4000000/4000000.0)));
   564     07D7  3009               	movlw	9
   565     07D8  00F2               	movwf	??_ADC_Read
   566     07D9                     u167:
   567     07D9  0BF2               	decfsz	??_ADC_Read,f
   568     07DA  2FD9               	goto	u167
   569     07DB  2FDC               	nop2
   570     07DC                     l661:
   571                           
   572                           ;main.c: 76:     GO_DONE = 1;
   573     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   574     07DD  1303               	bcf	3,6	;RP1=0, select bank0
   575     07DE  151F               	bsf	31,2	;volatile
   576     07DF                     l65:	
   577                           ;main.c: 77:     while(ADCON0bits.GO_DONE);
   578                           
   579     07DF  191F               	btfsc	31,2	;volatile
   580     07E0  2FE2               	goto	u101
   581     07E1  2FE3               	goto	u100
   582     07E2                     u101:
   583     07E2  2FDF               	goto	l65
   584     07E3                     u100:
   585     07E3                     l663:
   586                           
   587                           ;main.c: 78:     return ((ADRESH<<7) + ADRESL);
   588     07E3  081E               	movf	30,w	;volatile
   589     07E4  00F2               	movwf	??_ADC_Read
   590     07E5  01F3               	clrf	??_ADC_Read+1
   591     07E6  3007               	movlw	7
   592     07E7  00FF               	movwf	btemp+1
   593     07E8                     u115:
   594     07E8  1003               	clrc
   595     07E9  0DF2               	rlf	??_ADC_Read,f
   596     07EA  0DF3               	rlf	??_ADC_Read+1,f
   597     07EB  0BFF               	decfsz	btemp+1,f
   598     07EC  2FE8               	goto	u115
   599     07ED  1683               	bsf	3,5	;RP0=1, select bank1
   600     07EE  1303               	bcf	3,6	;RP1=0, select bank1
   601     07EF  081E               	movf	30,w	;volatile
   602     07F0  0772               	addwf	??_ADC_Read,w
   603     07F1  00F4               	movwf	??_ADC_Read+2
   604     07F2  3000               	movlw	0
   605     07F3  1803               	skipnc
   606     07F4  3001               	movlw	1
   607     07F5  0773               	addwf	??_ADC_Read+1,w
   608     07F6  00F5               	movwf	??_ADC_Read+3
   609     07F7  0874               	movf	??_ADC_Read+2,w
   610     07F8  00F0               	movwf	?_ADC_Read
   611     07F9  0875               	movf	??_ADC_Read+3,w
   612     07FA  00F1               	movwf	?_ADC_Read+1
   613     07FB                     l64:
   614     07FB  0008               	return
   615     07FC                     __end_of_ADC_Read:
   616                           
   617                           	psect	text4
   618     075D                     __ptext4:	
   619 ;; *************** function _ADC_Init *****************
   620 ;; Defined at:
   621 ;;		line 60 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648     075D                     _ADC_Init:	
   649                           ;psect for function _ADC_Init
   650                           
   651     075D                     l621:	
   652                           ;incstack = 0
   653                           ; Regs used in _ADC_Init: [wreg]
   654                           
   655                           
   656                           ;main.c: 63:     ADCON0 = 0x41;
   657     075D  3041               	movlw	65
   658     075E  1283               	bcf	3,5	;RP0=0, select bank0
   659     075F  1303               	bcf	3,6	;RP1=0, select bank0
   660     0760  009F               	movwf	31	;volatile
   661                           
   662                           ;main.c: 65:     ADCON1 = 0x80;
   663     0761  3080               	movlw	128
   664     0762  1683               	bsf	3,5	;RP0=1, select bank1
   665     0763  1303               	bcf	3,6	;RP1=0, select bank1
   666     0764  009F               	movwf	31	;volatile
   667     0765                     l60:
   668     0765  0008               	return
   669     0766                     __end_of_ADC_Init:
   670     007E                     btemp	set	126	;btemp
   671     007E                     wtemp0	set	126
   672                           
   673                           	psect	config
   674                           
   675                           ;Config register CONFIG @ 0x2007
   676                           ;	Oscillator Selection bits
   677                           ;	FOSC = HS, HS oscillator
   678                           ;	Watchdog Timer Enable bit
   679                           ;	WDTE = OFF, WDT disabled
   680                           ;	Power-up Timer Enable bit
   681                           ;	PWRTE = OFF, PWRT disabled
   682                           ;	Brown-out Reset Enable bit
   683                           ;	BOREN = ON, BOR enabled
   684                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   685                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   686                           ;	Data EEPROM Memory Code Protection bit
   687                           ;	CPD = OFF, Data EEPROM code protection off
   688                           ;	Flash Program Memory Write Enable bits
   689                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   690                           ;	In-Circuit Debugger Mode bit
   691                           ;	DEBUG = 0x1, unprogrammed default
   692                           ;	Flash Program Memory Code Protection bit
   693                           ;	CP = OFF, Code protection off
   694     2007                     	org	8199
   695     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_SetDuty
    _PWM1_SetDuty->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     186
                                             11 COMMON     1     1      0
                           _ADC_Init
                           _ADC_Read
                          _PWM1_Init
                       _PWM1_SetDuty
 ---------------------------------------------------------------------------------
 (1) _PWM1_SetDuty                                         4     2      2     142
                                              7 COMMON     4     2      2
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             7     5      2      44
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _PWM1_Init
   _PWM1_SetDuty
     _ADC_Read (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jun 14 15:01:37 2024

                     l60 0765                       l53 0774                       l64 07FB  
                     l65 07DF                       l57 0795                       u80 07C1  
                     u81 07C0                       u95 07CD                      l611 0766  
                    l621 075D                      l613 076D                      l615 076F  
                    l617 0772                      l651 07BB                      l619 0773  
                    l661 07DC                      l653 07C1                      l663 07E3  
                    l671 0789                      l657 07C4                      l673 0796  
                    l659 07D7                      l667 0775                      l675 07A0  
                    l669 077E                      l677 07AF                      u100 07E3  
                    u101 07E2                      u120 077E                      u121 077D  
                    u130 0785                      u115 07E8                      u131 0781  
                    u144 0788                      u157 07B1                      _PR2 0092  
                    u167 07D9                     _main 0796                     btemp 007E  
       __end_of_ADC_Init 0766         __end_of_ADC_Read 07FC                     start 0000  
                  ?_main 0070                    _CCP1X 00BD                    _CCP1Y 00BC  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07BA                   ??_main 007B                   _ADCON0 001F  
                 _ADCON1 009F                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
                 _TMR2ON 0092                   _TRISC2 043A        __end_of_PWM1_Init 0775  
              ?_ADC_Init 0070                ?_ADC_Read 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_ADC_Init 0070               ??_ADC_Read 0072  
             __pmaintext 0796                  _T2CKPS0 0090                  _T2CKPS1 0091  
                _GO_DONE 00FA            ?_PWM1_SetDuty 0077                  __ptext1 0775  
                __ptext2 0766                  __ptext3 07BA                  __ptext4 075D  
   end_of_initialization 07FC           ??_PWM1_SetDuty 0079                _PWM1_Init 0766  
         PWM1_SetDuty@DC 0077               ?_PWM1_Init 0070      start_initialization 07FC  
              ___latbits 0002     __end_of_PWM1_SetDuty 0796              ??_PWM1_Init 0070  
               _ADC_Init 075D                 _ADC_Read 07BA              ADC_Read@ANC 0076  
             _ADCON0bits 001F             _PWM1_SetDuty 0775  
