

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jun 03 15:47:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170     0790                     __pidataBANK0:
   171                           
   172                           ;initializer for main@F1007
   173     0790  34FC               	retlw	252
   174     0791  3460               	retlw	96
   175     0792  34DA               	retlw	218
   176     0793  34F2               	retlw	242
   177     0794  3466               	retlw	102
   178     0795  34B6               	retlw	182
   179     0796  34BE               	retlw	190
   180     0797  34E0               	retlw	224
   181     0798  34FE               	retlw	254
   182     0799  34F6               	retlw	246
   183     0008                     _PORTD	set	8
   184     0088                     _TRISD	set	136
   185                           
   186                           	psect	cinit
   187     07EE                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07EE                     __initialization:
   191                           
   192                           ; Initialize objects allocated to BANK0
   193     07EE  1383               	bcf	3,7	;select IRP bank0
   194     07EF  3035               	movlw	low (__pdataBANK0+10)
   195     07F0  00FD               	movwf	btemp+-1
   196     07F1  3007               	movlw	high __pidataBANK0
   197     07F2  00FE               	movwf	btemp
   198     07F3  3090               	movlw	low __pidataBANK0
   199     07F4  00FF               	movwf	btemp+1
   200     07F5  302B               	movlw	low __pdataBANK0
   201     07F6  0084               	movwf	4
   202     07F7  120A  118A  279E  120A  118A  	fcall	init_ram0
   203     07FC                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206     07FC                     __end_of__initialization:
   207     07FC  0183               	clrf	3
   208     07FD  120A  118A  2FAD   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	dataBANK0
   211     002B                     __pdataBANK0:
   212     002B                     main@F1007:
   213     002B                     	ds	10
   214                           
   215                           	psect	inittext
   216     079A                     init_fetch0:	
   217                           ;	Called with low address in FSR and high address in W
   218                           
   219     079A  087E               	movf	btemp,w
   220     079B  008A               	movwf	10
   221     079C  087F               	movf	btemp+1,w
   222     079D  0082               	movwf	2
   223     079E                     init_ram0:	
   224                           ;Called with:
   225                           ;	high address of idata address in btemp 
   226                           ;	low address of idata address in btemp+1 
   227                           ;	low address of data in FSR
   228                           ;	high address + 1 of data in btemp-1
   229                           
   230     079E  120A  118A  279A  120A  118A  	fcall	init_fetch0
   231     07A3  0080               	movwf	0
   232     07A4  0A84               	incf	4,f
   233     07A5  0804               	movf	4,w
   234     07A6  067D               	xorwf	btemp+-1,w
   235     07A7  1903               	btfsc	3,2
   236     07A8  3400               	retlw	0
   237     07A9  0AFF               	incf	btemp+1,f
   238     07AA  1903               	btfsc	3,2
   239     07AB  0AFE               	incf	btemp,f
   240     07AC  2F9E               	goto	init_ram0
   241                           
   242                           	psect	cstackCOMMON
   243     0070                     __pcstackCOMMON:
   244     0070                     ?_main:
   245     0070                     ??_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           ; 1 bytes @ 0x0
   250     0070                     	ds	4
   251                           
   252                           	psect	cstackBANK0
   253     0020                     __pcstackBANK0:
   254     0020                     main@segments_code:
   255                           
   256                           ; 10 bytes @ 0x0
   257     0020                     	ds	10
   258     002A                     main@counter:
   259                           
   260                           ; 1 bytes @ 0xA
   261     002A                     	ds	1
   262                           
   263                           	psect	maintext
   264     07AD                     __pmaintext:	
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 14 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  segments_cod   10    0[BANK0 ] unsigned char [10]
   275 ;;  counter         1   10[BANK0 ] unsigned char 
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   280 ;; Tracked objects:
   281 ;;		On entry : B00/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   285 ;;      Params:         0       0       0       0       0
   286 ;;      Locals:         0      11       0       0       0
   287 ;;      Temps:          4       0       0       0       0
   288 ;;      Totals:         4      11       0       0       0
   289 ;;Total ram usage:       15 bytes
   290 ;; This function calls:
   291 ;;		Nothing
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297     07AD                     _main:	
   298                           ;psect for function _main
   299                           
   300     07AD                     l579:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   303                           
   304                           
   305                           ;main.c: 16:     unsigned char segments_code[10] = {0xFC, 0x60, 0xDA, 0xF2, 0x66, 0xB6, 
      +                          0xBE, 0xE0, 0xFE, 0xF6};
   306     07AD  3020               	movlw	main@segments_code& (0+255)
   307     07AE  0084               	movwf	4
   308     07AF  302B               	movlw	low main@F1007
   309     07B0  00F0               	movwf	??_main
   310     07B1  0804               	movf	4,w
   311     07B2  00F1               	movwf	??_main+1
   312     07B3  300A               	movlw	10
   313     07B4  00F2               	movwf	??_main+2
   314     07B5                     u30:
   315     07B5  0870               	movf	??_main,w
   316     07B6  0084               	movwf	4
   317     07B7  1383               	bcf	3,7	;select IRP bank0
   318     07B8  0800               	movf	0,w
   319     07B9  00F3               	movwf	??_main+3
   320     07BA  0AF0               	incf	??_main,f
   321     07BB  0871               	movf	??_main+1,w
   322     07BC  0084               	movwf	4
   323     07BD  0873               	movf	??_main+3,w
   324     07BE  0080               	movwf	0
   325     07BF  0AF1               	incf	??_main+1,f
   326     07C0  0BF2               	decfsz	??_main+2,f
   327     07C1  2FB5               	goto	u30
   328     07C2                     l581:
   329                           
   330                           ;main.c: 17:     unsigned char counter = 0;
   331     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   332     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   333     07C4  01AA               	clrf	main@counter
   334     07C5                     l583:
   335                           
   336                           ;main.c: 18:     PORTD = 0x00;
   337     07C5  0188               	clrf	8	;volatile
   338     07C6                     l585:
   339                           
   340                           ;main.c: 19:     TRISD = 0x00;
   341     07C6  1683               	bsf	3,5	;RP0=1, select bank1
   342     07C7  1303               	bcf	3,6	;RP1=0, select bank1
   343     07C8  0188               	clrf	8	;volatile
   344     07C9                     l587:
   345                           
   346                           ;main.c: 22:         PORTD = segments_code[counter];
   347     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   348     07CA  082A               	movf	main@counter,w
   349     07CB  3E20               	addlw	(low (main@segments_code| 0))& (0+255)
   350     07CC  0084               	movwf	4
   351     07CD  1383               	bcf	3,7	;select IRP bank0
   352     07CE  0800               	movf	0,w
   353     07CF  0088               	movwf	8	;volatile
   354     07D0                     l589:
   355                           
   356                           ;main.c: 23:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   357     07D0  3006               	movlw	6
   358     07D1  00F2               	movwf	??_main+2
   359     07D2  3013               	movlw	19
   360     07D3  00F1               	movwf	??_main+1
   361     07D4  30AD               	movlw	173
   362     07D5  00F0               	movwf	??_main
   363     07D6                     u57:
   364     07D6  0BF0               	decfsz	??_main,f
   365     07D7  2FD6               	goto	u57
   366     07D8  0BF1               	decfsz	??_main+1,f
   367     07D9  2FD6               	goto	u57
   368     07DA  0BF2               	decfsz	??_main+2,f
   369     07DB  2FD6               	goto	u57
   370     07DC  2FDD               	nop2
   371     07DD                     l591:
   372                           
   373                           ;main.c: 24:         counter++;
   374     07DD  3001               	movlw	1
   375     07DE  00FF               	movwf	btemp+1
   376     07DF  087F               	movf	btemp+1,w
   377     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   378     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   379     07E2  07AA               	addwf	main@counter,f
   380     07E3                     l593:
   381                           
   382                           ;main.c: 25:         if(counter>9){
   383     07E3  300A               	movlw	10
   384     07E4  022A               	subwf	main@counter,w
   385     07E5  1C03               	skipc
   386     07E6  2FE8               	goto	u41
   387     07E7  2FE9               	goto	u40
   388     07E8                     u41:
   389     07E8  2FC9               	goto	l587
   390     07E9                     u40:
   391     07E9                     l595:
   392                           
   393                           ;main.c: 26:             counter = 0;
   394     07E9  01AA               	clrf	main@counter
   395     07EA  2FC9               	goto	l587
   396     07EB  120A  118A  2800   	ljmp	start
   397     07EE                     __end_of_main:
   398     007E                     btemp	set	126	;btemp
   399     007E                     wtemp0	set	126
   400                           
   401                           	psect	config
   402                           
   403                           ;Config register CONFIG @ 0x2007
   404                           ;	Oscillator Selection bits
   405                           ;	FOSC = XT, XT oscillator
   406                           ;	Watchdog Timer Enable bit
   407                           ;	WDTE = OFF, WDT disabled
   408                           ;	Power-up Timer Enable bit
   409                           ;	PWRTE = OFF, PWRT disabled
   410                           ;	Brown-out Reset Enable bit
   411                           ;	BOREN = ON, BOR enabled
   412                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   413                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   414                           ;	Data EEPROM Memory Code Protection bit
   415                           ;	CPD = OFF, Data EEPROM code protection off
   416                           ;	Flash Program Memory Write Enable bits
   417                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   418                           ;	In-Circuit Debugger Mode bit
   419                           ;	DEBUG = 0x1, unprogrammed default
   420                           ;	Flash Program Memory Code Protection bit
   421                           ;	CP = OFF, Code protection off
   422     2007                     	org	8199
   423     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     11      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0      71
                                              0 COMMON     4     4      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jun 03 15:47:05 2024

                      pc 0002                       u30 07B5                       u40 07E9  
                     u41 07E8                       u57 07D6                       fsr 0004  
                    l581 07C2                      l591 07DD                      l583 07C5  
                    l593 07E3                      l585 07C6                      l595 07E9  
                    l587 07C9                      l579 07AD                      l589 07D0  
                    fsr0 0004                      indf 0000              main@counter 002A  
                   _main 07AD                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTD 0008                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0790  
             __pmaintext 07AD        main@segments_code 0020     end_of_initialization 07FC  
    start_initialization 07EE               init_fetch0 079A              __pdataBANK0 002B  
              ___latbits 0002            __pcstackBANK0 0020                main@F1007 002B  
               init_ram0 079E  
