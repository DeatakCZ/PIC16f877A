

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jun 03 17:36:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170     0788                     __pidataBANK0:
   171                           
   172                           ;initializer for main@F1007
   173     0788  343F               	retlw	63
   174     0789  3406               	retlw	6
   175     078A  345B               	retlw	91
   176     078B  344F               	retlw	79
   177     078C  3466               	retlw	102
   178     078D  346D               	retlw	109
   179     078E  347D               	retlw	125
   180     078F  3407               	retlw	7
   181     0790  347F               	retlw	127
   182     0791  346F               	retlw	111
   183     0008                     _PORTD	set	8
   184     002A                     _RA2	set	42
   185     0088                     _TRISD	set	136
   186     042A                     _TRISA2	set	1066
   187                           
   188                           	psect	cinit
   189     07EE                     start_initialization:	
   190                           ; #config settings
   191                           
   192     07EE                     __initialization:
   193                           
   194                           ; Initialize objects allocated to BANK0
   195     07EE  1383               	bcf	3,7	;select IRP bank0
   196     07EF  3035               	movlw	low (__pdataBANK0+10)
   197     07F0  00FD               	movwf	btemp+-1
   198     07F1  3007               	movlw	high __pidataBANK0
   199     07F2  00FE               	movwf	btemp
   200     07F3  3088               	movlw	low __pidataBANK0
   201     07F4  00FF               	movwf	btemp+1
   202     07F5  302B               	movlw	low __pdataBANK0
   203     07F6  0084               	movwf	4
   204     07F7  120A  118A  2796  120A  118A  	fcall	init_ram0
   205     07FC                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208     07FC                     __end_of__initialization:
   209     07FC  0183               	clrf	3
   210     07FD  120A  118A  2FA5   	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	dataBANK0
   213     002B                     __pdataBANK0:
   214     002B                     main@F1007:
   215     002B                     	ds	10
   216                           
   217                           	psect	inittext
   218     0792                     init_fetch0:	
   219                           ;	Called with low address in FSR and high address in W
   220                           
   221     0792  087E               	movf	btemp,w
   222     0793  008A               	movwf	10
   223     0794  087F               	movf	btemp+1,w
   224     0795  0082               	movwf	2
   225     0796                     init_ram0:	
   226                           ;Called with:
   227                           ;	high address of idata address in btemp 
   228                           ;	low address of idata address in btemp+1 
   229                           ;	low address of data in FSR
   230                           ;	high address + 1 of data in btemp-1
   231                           
   232     0796  120A  118A  2792  120A  118A  	fcall	init_fetch0
   233     079B  0080               	movwf	0
   234     079C  0A84               	incf	4,f
   235     079D  0804               	movf	4,w
   236     079E  067D               	xorwf	btemp+-1,w
   237     079F  1903               	btfsc	3,2
   238     07A0  3400               	retlw	0
   239     07A1  0AFF               	incf	btemp+1,f
   240     07A2  1903               	btfsc	3,2
   241     07A3  0AFE               	incf	btemp,f
   242     07A4  2F96               	goto	init_ram0
   243                           
   244                           	psect	cstackCOMMON
   245     0070                     __pcstackCOMMON:
   246     0070                     ?_main:
   247     0070                     ??_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 1 bytes @ 0x0
   252     0070                     	ds	4
   253                           
   254                           	psect	cstackBANK0
   255     0020                     __pcstackBANK0:
   256     0020                     main@segments_code:
   257                           
   258                           ; 10 bytes @ 0x0
   259     0020                     	ds	10
   260     002A                     main@counter:
   261                           
   262                           ; 1 bytes @ 0xA
   263     002A                     	ds	1
   264                           
   265                           	psect	maintext
   266     07A5                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 14 in file "main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;  segments_cod   10    0[BANK0 ] unsigned char [10]
   277 ;;  counter         1   10[BANK0 ] unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         0      11       0       0       0
   289 ;;      Temps:          4       0       0       0       0
   290 ;;      Totals:         4      11       0       0       0
   291 ;;Total ram usage:       15 bytes
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299     07A5                     _main:	
   300                           ;psect for function _main
   301                           
   302     07A5                     l589:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   305                           
   306                           
   307                           ;main.c: 16:     unsigned char segments_code[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 
      +                          0x7D, 0x07, 0x7F, 0x6F};
   308     07A5  3020               	movlw	main@segments_code& (0+255)
   309     07A6  0084               	movwf	4
   310     07A7  302B               	movlw	low main@F1007
   311     07A8  00F0               	movwf	??_main
   312     07A9  0804               	movf	4,w
   313     07AA  00F1               	movwf	??_main+1
   314     07AB  300A               	movlw	10
   315     07AC  00F2               	movwf	??_main+2
   316     07AD                     u30:
   317     07AD  0870               	movf	??_main,w
   318     07AE  0084               	movwf	4
   319     07AF  1383               	bcf	3,7	;select IRP bank0
   320     07B0  0800               	movf	0,w
   321     07B1  00F3               	movwf	??_main+3
   322     07B2  0AF0               	incf	??_main,f
   323     07B3  0871               	movf	??_main+1,w
   324     07B4  0084               	movwf	4
   325     07B5  0873               	movf	??_main+3,w
   326     07B6  0080               	movwf	0
   327     07B7  0AF1               	incf	??_main+1,f
   328     07B8  0BF2               	decfsz	??_main+2,f
   329     07B9  2FAD               	goto	u30
   330     07BA                     l591:
   331                           
   332                           ;main.c: 17:     unsigned char counter = 0;
   333     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   334     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   335     07BC  01AA               	clrf	main@counter
   336     07BD                     l593:
   337                           
   338                           ;main.c: 18:     PORTD = 0x00;
   339     07BD  0188               	clrf	8	;volatile
   340     07BE                     l595:
   341                           
   342                           ;main.c: 19:     TRISD = 0x00;
   343     07BE  1683               	bsf	3,5	;RP0=1, select bank1
   344     07BF  1303               	bcf	3,6	;RP1=0, select bank1
   345     07C0  0188               	clrf	8	;volatile
   346     07C1                     l597:
   347                           
   348                           ;main.c: 20:     RA2 = 0;
   349     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   350     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   351     07C3  1105               	bcf	5,2	;volatile
   352     07C4                     l599:
   353                           
   354                           ;main.c: 21:     TRISA2 = 0;
   355     07C4  1683               	bsf	3,5	;RP0=1, select bank1
   356     07C5  1303               	bcf	3,6	;RP1=0, select bank1
   357     07C6  1105               	bcf	5,2	;volatile
   358     07C7                     l601:
   359                           
   360                           ;main.c: 23:     RA2 = 1;
   361     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   362     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   363     07C9  1505               	bsf	5,2	;volatile
   364     07CA                     l603:
   365                           
   366                           ;main.c: 25:         PORTD = segments_code[counter];
   367     07CA  082A               	movf	main@counter,w
   368     07CB  3E20               	addlw	(low (main@segments_code| 0))& (0+255)
   369     07CC  0084               	movwf	4
   370     07CD  1383               	bcf	3,7	;select IRP bank0
   371     07CE  0800               	movf	0,w
   372     07CF  0088               	movwf	8	;volatile
   373     07D0                     l605:
   374                           
   375                           ;main.c: 26:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   376     07D0  3006               	movlw	6
   377     07D1  00F2               	movwf	??_main+2
   378     07D2  3013               	movlw	19
   379     07D3  00F1               	movwf	??_main+1
   380     07D4  30AD               	movlw	173
   381     07D5  00F0               	movwf	??_main
   382     07D6                     u57:
   383     07D6  0BF0               	decfsz	??_main,f
   384     07D7  2FD6               	goto	u57
   385     07D8  0BF1               	decfsz	??_main+1,f
   386     07D9  2FD6               	goto	u57
   387     07DA  0BF2               	decfsz	??_main+2,f
   388     07DB  2FD6               	goto	u57
   389     07DC  2FDD               	nop2
   390     07DD                     l607:
   391                           
   392                           ;main.c: 27:         counter++;
   393     07DD  3001               	movlw	1
   394     07DE  00FF               	movwf	btemp+1
   395     07DF  087F               	movf	btemp+1,w
   396     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   397     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   398     07E2  07AA               	addwf	main@counter,f
   399     07E3                     l609:
   400                           
   401                           ;main.c: 28:         if(counter>9){
   402     07E3  300A               	movlw	10
   403     07E4  022A               	subwf	main@counter,w
   404     07E5  1C03               	skipc
   405     07E6  2FE8               	goto	u41
   406     07E7  2FE9               	goto	u40
   407     07E8                     u41:
   408     07E8  2FCA               	goto	l603
   409     07E9                     u40:
   410     07E9                     l611:
   411                           
   412                           ;main.c: 29:             counter = 0;
   413     07E9  01AA               	clrf	main@counter
   414     07EA  2FCA               	goto	l603
   415     07EB  120A  118A  2800   	ljmp	start
   416     07EE                     __end_of_main:
   417     007E                     btemp	set	126	;btemp
   418     007E                     wtemp0	set	126
   419                           
   420                           	psect	config
   421                           
   422                           ;Config register CONFIG @ 0x2007
   423                           ;	Oscillator Selection bits
   424                           ;	FOSC = XT, XT oscillator
   425                           ;	Watchdog Timer Enable bit
   426                           ;	WDTE = OFF, WDT disabled
   427                           ;	Power-up Timer Enable bit
   428                           ;	PWRTE = OFF, PWRT disabled
   429                           ;	Brown-out Reset Enable bit
   430                           ;	BOREN = ON, BOR enabled
   431                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   432                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   433                           ;	Data EEPROM Memory Code Protection bit
   434                           ;	CPD = OFF, Data EEPROM code protection off
   435                           ;	Flash Program Memory Write Enable bits
   436                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   437                           ;	In-Circuit Debugger Mode bit
   438                           ;	DEBUG = 0x1, unprogrammed default
   439                           ;	Flash Program Memory Code Protection bit
   440                           ;	CP = OFF, Code protection off
   441     2007                     	org	8199
   442     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     11      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0      71
                                              0 COMMON     4     4      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jun 03 17:36:44 2024

                      pc 0002                       u30 07AD                       u40 07E9  
                     u41 07E8                       u57 07D6                       fsr 0004  
                    l601 07C7                      l611 07E9                      l603 07CA  
                    l605 07D0                      l607 07DD                      l609 07E3  
                    l591 07BA                      l593 07BD                      l595 07BE  
                    l597 07C1                      l589 07A5                      l599 07C4  
                    _RA2 002A                      fsr0 0004                      indf 0000  
            main@counter 002A                     _main 07A5                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTD 0008  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0070                   _TRISA2 042A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0788               __pmaintext 07A5  
      main@segments_code 0020     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 0792              __pdataBANK0 002B                ___latbits 0002  
          __pcstackBANK0 0020                main@F1007 002B                 init_ram0 0796  
