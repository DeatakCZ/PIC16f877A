

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jun 04 16:17:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16LF877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0000                     	;# 
    45     0001                     	;# 
    46     0002                     	;# 
    47     0003                     	;# 
    48     0004                     	;# 
    49     0005                     	;# 
    50     0006                     	;# 
    51     0007                     	;# 
    52     0008                     	;# 
    53     0009                     	;# 
    54     000A                     	;# 
    55     000B                     	;# 
    56     000C                     	;# 
    57     000D                     	;# 
    58     000E                     	;# 
    59     000E                     	;# 
    60     000F                     	;# 
    61     0010                     	;# 
    62     0011                     	;# 
    63     0012                     	;# 
    64     0013                     	;# 
    65     0014                     	;# 
    66     0015                     	;# 
    67     0015                     	;# 
    68     0016                     	;# 
    69     0017                     	;# 
    70     0018                     	;# 
    71     0019                     	;# 
    72     001A                     	;# 
    73     001B                     	;# 
    74     001B                     	;# 
    75     001C                     	;# 
    76     001D                     	;# 
    77     001E                     	;# 
    78     001F                     	;# 
    79     0081                     	;# 
    80     0085                     	;# 
    81     0086                     	;# 
    82     0087                     	;# 
    83     0088                     	;# 
    84     0089                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     0091                     	;# 
    89     0092                     	;# 
    90     0093                     	;# 
    91     0094                     	;# 
    92     0098                     	;# 
    93     0099                     	;# 
    94     009C                     	;# 
    95     009D                     	;# 
    96     009E                     	;# 
    97     009F                     	;# 
    98     010C                     	;# 
    99     010D                     	;# 
   100     010E                     	;# 
   101     010F                     	;# 
   102     018C                     	;# 
   103     018D                     	;# 
   104     0000                     	;# 
   105     0001                     	;# 
   106     0002                     	;# 
   107     0003                     	;# 
   108     0004                     	;# 
   109     0005                     	;# 
   110     0006                     	;# 
   111     0007                     	;# 
   112     0008                     	;# 
   113     0009                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     000E                     	;# 
   119     000E                     	;# 
   120     000F                     	;# 
   121     0010                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0014                     	;# 
   126     0015                     	;# 
   127     0015                     	;# 
   128     0016                     	;# 
   129     0017                     	;# 
   130     0018                     	;# 
   131     0019                     	;# 
   132     001A                     	;# 
   133     001B                     	;# 
   134     001B                     	;# 
   135     001C                     	;# 
   136     001D                     	;# 
   137     001E                     	;# 
   138     001F                     	;# 
   139     0081                     	;# 
   140     0085                     	;# 
   141     0086                     	;# 
   142     0087                     	;# 
   143     0088                     	;# 
   144     0089                     	;# 
   145     008C                     	;# 
   146     008D                     	;# 
   147     008E                     	;# 
   148     0091                     	;# 
   149     0092                     	;# 
   150     0093                     	;# 
   151     0094                     	;# 
   152     0098                     	;# 
   153     0099                     	;# 
   154     009C                     	;# 
   155     009D                     	;# 
   156     009E                     	;# 
   157     009F                     	;# 
   158     010C                     	;# 
   159     010D                     	;# 
   160     010E                     	;# 
   161     010F                     	;# 
   162     018C                     	;# 
   163     018D                     	;# 
   164     0006                     _PORTB	set	6
   165     0039                     _RC1	set	57
   166     0038                     _RC0	set	56
   167     0086                     _TRISB	set	134
   168     0439                     _TRISC1	set	1081
   169     0438                     _TRISC0	set	1080
   170                           
   171                           	psect	cinit
   172     07FC                     start_initialization:	
   173                           ; #config settings
   174                           
   175     07FC                     __initialization:
   176     07FC                     end_of_initialization:	
   177                           ;End of C runtime variable initialization code
   178                           
   179     07FC                     __end_of__initialization:
   180     07FC  0183               	clrf	3
   181     07FD  120A  118A  2F72   	ljmp	_main	;jump to C main() function
   182                           
   183                           	psect	cstackCOMMON
   184     0070                     __pcstackCOMMON:
   185     0070                     ?_main:
   186     0070                     ??_main:	
   187                           ; 1 bytes @ 0x0
   188                           
   189                           
   190                           ; 1 bytes @ 0x0
   191     0070                     	ds	2
   192     0072                     main@j:
   193                           
   194                           ; 2 bytes @ 0x2
   195     0072                     	ds	2
   196     0074                     main@j_41:
   197                           
   198                           ; 2 bytes @ 0x4
   199     0074                     	ds	2
   200     0076                     main@i:
   201                           
   202                           ; 1 bytes @ 0x6
   203     0076                     	ds	1
   204                           
   205                           	psect	maintext
   206     0772                     __pmaintext:	
   207 ;;
   208 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   209 ;;
   210 ;; *************** function _main *****************
   211 ;; Defined at:
   212 ;;		line 14 in file "main.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;  j               2    4[COMMON] int 
   217 ;;  j               2    2[COMMON] int 
   218 ;;  i               1    6[COMMON] unsigned char 
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2, status,0, btemp+1
   223 ;; Tracked objects:
   224 ;;		On entry : B00/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   228 ;;      Params:         0       0       0       0       0
   229 ;;      Locals:         5       0       0       0       0
   230 ;;      Temps:          2       0       0       0       0
   231 ;;      Totals:         7       0       0       0       0
   232 ;;Total ram usage:        7 bytes
   233 ;; This function calls:
   234 ;;		Nothing
   235 ;; This function is called by:
   236 ;;		Startup code after reset
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240     0772                     _main:	
   241                           ;psect for function _main
   242                           
   243     0772                     l578:	
   244                           ;incstack = 0
   245                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   246                           
   247                           
   248                           ;main.c: 16:     PORTB = 0x00;
   249     0772  1283               	bcf	3,5	;RP0=0, select bank0
   250     0773  1303               	bcf	3,6	;RP1=0, select bank0
   251     0774  0186               	clrf	6	;volatile
   252                           
   253                           ;main.c: 17:     TRISB = 0x00;
   254     0775  1683               	bsf	3,5	;RP0=1, select bank1
   255     0776  1303               	bcf	3,6	;RP1=0, select bank1
   256     0777  0186               	clrf	6	;volatile
   257     0778                     l580:
   258                           
   259                           ;main.c: 19:     TRISC0 = 1;
   260     0778  1407               	bsf	7,0	;volatile
   261     0779                     l582:
   262                           
   263                           ;main.c: 20:     TRISC1 = 1;
   264     0779  1487               	bsf	7,1	;volatile
   265                           
   266                           ;main.c: 26:     unsigned char i = 0;
   267     077A  01F6               	clrf	main@i
   268     077B  2FB2               	goto	l20
   269     077C                     l584:
   270                           
   271                           ;main.c: 30:             for(int j=0; j<4; j++){
   272     077C  01F2               	clrf	main@j
   273     077D  01F3               	clrf	main@j+1
   274     077E                     l590:
   275                           
   276                           ;main.c: 31:                 PORTB = (1<<i);
   277     077E  3001               	movlw	1
   278     077F  00F0               	movwf	??_main
   279     0780  0A76               	incf	main@i,w
   280     0781  2F84               	goto	u14
   281     0782                     u15:
   282     0782  1003               	clrc
   283     0783  0DF0               	rlf	??_main,f
   284     0784                     u14:
   285     0784  3EFF               	addlw	-1
   286     0785  1D03               	skipz
   287     0786  2F82               	goto	u15
   288     0787  0870               	movf	??_main,w
   289     0788  1283               	bcf	3,5	;RP0=0, select bank0
   290     0789  1303               	bcf	3,6	;RP1=0, select bank0
   291     078A  0086               	movwf	6	;volatile
   292     078B                     l592:
   293                           
   294                           ;main.c: 32:                 _delay((unsigned long)((25)*(4000000/4000.0)));
   295     078B  3021               	movlw	33
   296     078C  00F1               	movwf	??_main+1
   297     078D  3076               	movlw	118
   298     078E  00F0               	movwf	??_main
   299     078F                     u97:
   300     078F  0BF0               	decfsz	??_main,f
   301     0790  2F8F               	goto	u97
   302     0791  0BF1               	decfsz	??_main+1,f
   303     0792  2F8F               	goto	u97
   304     0793  0000               	nop
   305     0794                     l594:
   306                           
   307                           ;main.c: 33:                 i++;
   308     0794  3001               	movlw	1
   309     0795  00FF               	movwf	btemp+1
   310     0796  087F               	movf	btemp+1,w
   311     0797  07F6               	addwf	main@i,f
   312     0798                     l596:
   313                           
   314                           ;main.c: 34:                 if(i==4)
   315     0798  3004               	movlw	4
   316     0799  0676               	xorwf	main@i,w
   317     079A  1D03               	btfss	3,2
   318     079B  2F9D               	goto	u21
   319     079C  2F9E               	goto	u20
   320     079D                     u21:
   321     079D  2F9F               	goto	l600
   322     079E                     u20:
   323     079E                     l598:
   324                           
   325                           ;main.c: 35:                     i = 0;
   326     079E  01F6               	clrf	main@i
   327     079F                     l600:
   328                           
   329                           ;main.c: 36:             }
   330     079F  3001               	movlw	1
   331     07A0  07F2               	addwf	main@j,f
   332     07A1  1803               	skipnc
   333     07A2  0AF3               	incf	main@j+1,f
   334     07A3  3000               	movlw	0
   335     07A4  07F3               	addwf	main@j+1,f
   336     07A5                     l602:
   337     07A5  0873               	movf	main@j+1,w
   338     07A6  3A80               	xorlw	128
   339     07A7  00FF               	movwf	btemp+1
   340     07A8  3080               	movlw	128
   341     07A9  027F               	subwf	btemp+1,w
   342     07AA  1D03               	skipz
   343     07AB  2FAE               	goto	u35
   344     07AC  3004               	movlw	4
   345     07AD  0272               	subwf	main@j,w
   346     07AE                     u35:
   347     07AE  1C03               	skipc
   348     07AF  2FB1               	goto	u31
   349     07B0  2FB2               	goto	u30
   350     07B1                     u31:
   351     07B1  2F7E               	goto	l590
   352     07B2                     u30:
   353     07B2                     l20:	
   354                           ;main.c: 37:         }
   355                           
   356                           
   357                           ;main.c: 29:         while(RC0){
   358     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   359     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   360     07B4  1807               	btfsc	7,0	;volatile
   361     07B5  2FB7               	goto	u41
   362     07B6  2FB8               	goto	u40
   363     07B7                     u41:
   364     07B7  2F7C               	goto	l584
   365     07B8                     u40:
   366     07B8  2FF2               	goto	l26
   367     07B9                     l604:
   368                           
   369                           ;main.c: 40:             for(int j=0; j<4; j++){
   370     07B9  01F4               	clrf	main@j_41
   371     07BA  01F5               	clrf	main@j_41+1
   372     07BB                     l610:
   373                           
   374                           ;main.c: 41:                 PORTB = (8>>i);
   375     07BB  0A76               	incf	main@i,w
   376     07BC  00FF               	movwf	btemp+1
   377     07BD  3008               	movlw	8
   378     07BE  00F0               	movwf	??_main
   379     07BF  3000               	movlw	0
   380     07C0  00F1               	movwf	??_main+1
   381     07C1  2FC5               	goto	u54
   382     07C2                     u55:
   383     07C2  0D71               	rlf	??_main+1,w
   384     07C3  0CF1               	rrf	??_main+1,f
   385     07C4  0CF0               	rrf	??_main,f
   386     07C5                     u54:
   387     07C5  0BFF               	decfsz	btemp+1,f
   388     07C6  2FC2               	goto	u55
   389     07C7  0870               	movf	??_main,w
   390     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   391     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   392     07CA  0086               	movwf	6	;volatile
   393     07CB                     l612:
   394                           
   395                           ;main.c: 42:                 _delay((unsigned long)((25)*(4000000/4000.0)));
   396     07CB  3021               	movlw	33
   397     07CC  00F1               	movwf	??_main+1
   398     07CD  3076               	movlw	118
   399     07CE  00F0               	movwf	??_main
   400     07CF                     u107:
   401     07CF  0BF0               	decfsz	??_main,f
   402     07D0  2FCF               	goto	u107
   403     07D1  0BF1               	decfsz	??_main+1,f
   404     07D2  2FCF               	goto	u107
   405     07D3  0000               	nop
   406     07D4                     l614:
   407                           
   408                           ;main.c: 43:                 i++;
   409     07D4  3001               	movlw	1
   410     07D5  00FF               	movwf	btemp+1
   411     07D6  087F               	movf	btemp+1,w
   412     07D7  07F6               	addwf	main@i,f
   413     07D8                     l616:
   414                           
   415                           ;main.c: 44:                 if(i==4)
   416     07D8  3004               	movlw	4
   417     07D9  0676               	xorwf	main@i,w
   418     07DA  1D03               	btfss	3,2
   419     07DB  2FDD               	goto	u61
   420     07DC  2FDE               	goto	u60
   421     07DD                     u61:
   422     07DD  2FDF               	goto	l620
   423     07DE                     u60:
   424     07DE                     l618:
   425                           
   426                           ;main.c: 45:                     i = 0;
   427     07DE  01F6               	clrf	main@i
   428     07DF                     l620:
   429                           
   430                           ;main.c: 46:             }
   431     07DF  3001               	movlw	1
   432     07E0  07F4               	addwf	main@j_41,f
   433     07E1  1803               	skipnc
   434     07E2  0AF5               	incf	main@j_41+1,f
   435     07E3  3000               	movlw	0
   436     07E4  07F5               	addwf	main@j_41+1,f
   437     07E5                     l622:
   438     07E5  0875               	movf	main@j_41+1,w
   439     07E6  3A80               	xorlw	128
   440     07E7  00FF               	movwf	btemp+1
   441     07E8  3080               	movlw	128
   442     07E9  027F               	subwf	btemp+1,w
   443     07EA  1D03               	skipz
   444     07EB  2FEE               	goto	u75
   445     07EC  3004               	movlw	4
   446     07ED  0274               	subwf	main@j_41,w
   447     07EE                     u75:
   448     07EE  1C03               	skipc
   449     07EF  2FF1               	goto	u71
   450     07F0  2FF2               	goto	u70
   451     07F1                     u71:
   452     07F1  2FBB               	goto	l610
   453     07F2                     u70:
   454     07F2                     l26:	
   455                           ;main.c: 47:         }
   456                           
   457                           
   458                           ;main.c: 39:         while(RC1){
   459     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   460     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   461     07F4  1887               	btfsc	7,1	;volatile
   462     07F5  2FF7               	goto	u81
   463     07F6  2FF8               	goto	u80
   464     07F7                     u81:
   465     07F7  2FB9               	goto	l604
   466     07F8                     u80:
   467     07F8  2FB2               	goto	l20
   468     07F9  120A  118A  2800   	ljmp	start
   469     07FC                     __end_of_main:
   470     007E                     btemp	set	126	;btemp
   471     007E                     wtemp0	set	126
   472                           
   473                           	psect	config
   474                           
   475                           ;Config register CONFIG @ 0x2007
   476                           ;	Oscillator Selection bits
   477                           ;	FOSC = XT, XT oscillator
   478                           ;	Watchdog Timer Enable bit
   479                           ;	WDTE = OFF, WDT disabled
   480                           ;	Power-up Timer Enable bit
   481                           ;	PWRTE = OFF, PWRT disabled
   482                           ;	Brown-out Reset Enable bit
   483                           ;	BOREN = ON, BOR enabled
   484                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   485                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   486                           ;	Data EEPROM Memory Code Protection bit
   487                           ;	CPD = OFF, Data EEPROM code protection off
   488                           ;	Flash Program Memory Write Enable bits
   489                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   490                           ;	In-Circuit Debugger Mode bit
   491                           ;	DEBUG = 0x1, unprogrammed default
   492                           ;	Flash Program Memory Code Protection bit
   493                           ;	CP = OFF, Code protection off
   494     2007                     	org	8199
   495     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     120
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jun 04 16:17:56 2024

                     l20 07B2                       l26 07F2                       u20 079E  
                     u21 079D                       u30 07B2                       u14 0784  
                     u31 07B1                       u15 0782                       u40 07B8  
                     u41 07B7                       u35 07AE                       u60 07DE  
                     u61 07DD                       u70 07F2                       u54 07C5  
                     u71 07F1                       u55 07C2                       u80 07F8  
                     u81 07F7                       u75 07EE                       u97 078F  
                    l600 079F                      l610 07BB                      l602 07A5  
                    l620 07DF                      l612 07CB                      l604 07B9  
                    l622 07E5                      l614 07D4                      l616 07D8  
                    l618 07DE                      l580 0778                      l590 077E  
                    l582 0779                      l592 078B                      l584 077C  
                    l594 0794                      l578 0772                      l596 0798  
                    l598 079E                      _RC0 0038                      _RC1 0039  
                    u107 07CF                     _main 0772                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    main@i 0076                    main@j 0072  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0070                   _TRISC0 0438  
                 _TRISC1 0439  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0772     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002                 main@j_41 0074  
