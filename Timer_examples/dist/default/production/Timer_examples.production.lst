

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jun 11 17:23:22 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172                           
   173                           	psect	idataBANK0
   174     00A8                     __pidataBANK0:
   175                           
   176                           ;initializer for main@F1009
   177     00A8  343F               	retlw	63
   178     00A9  3406               	retlw	6
   179     00AA  345B               	retlw	91
   180     00AB  344F               	retlw	79
   181     00AC  3466               	retlw	102
   182     00AD  346D               	retlw	109
   183     00AE  347D               	retlw	125
   184     00AF  3407               	retlw	7
   185     00B0  347F               	retlw	127
   186     00B1  346F               	retlw	111
   187     000E                     _TMR1	set	14
   188     0008                     _PORTD	set	8
   189     0080                     _TMR1ON	set	128
   190     002A                     _RA2	set	42
   191     0034                     _RB4	set	52
   192     005F                     _GIE	set	95
   193     005E                     _PEIE	set	94
   194     0060                     _TMR1IF	set	96
   195     0081                     _TMR1CS	set	129
   196     0083                     _T1OSCEN	set	131
   197     0084                     _T1CKPS0	set	132
   198     0085                     _T1CKPS1	set	133
   199     0088                     _TRISD	set	136
   200     042A                     _TRISA2	set	1066
   201     0434                     _TRISB4	set	1076
   202     0460                     _TMR1IE	set	1120
   203                           
   204                           	psect	cinit
   205     0011                     start_initialization:	
   206                           ; #config settings
   207                           
   208     0011                     __initialization:
   209                           
   210                           ; Initialize objects allocated to BANK0
   211     0011  1383               	bcf	3,7	;select IRP bank0
   212     0012  302A               	movlw	low (__pdataBANK0+10)
   213     0013  00FD               	movwf	btemp+-1
   214     0014  3000               	movlw	high __pidataBANK0
   215     0015  00FE               	movwf	btemp
   216     0016  30A8               	movlw	low __pidataBANK0
   217     0017  00FF               	movwf	btemp+1
   218     0018  3020               	movlw	low __pdataBANK0
   219     0019  0084               	movwf	4
   220     001A  120A  118A  2099  120A  118A  	fcall	init_ram0
   221                           
   222                           ; Clear objects allocated to BANK0
   223     001F  01B4               	clrf	__pbssBANK0& (0+127)
   224                           
   225                           ; Clear objects allocated to COMMON
   226     0020  01F7               	clrf	__pbssCOMMON& (0+127)
   227     0021                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230     0021                     __end_of__initialization:
   231     0021  0183               	clrf	3
   232     0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMMON
   235     0077                     __pbssCOMMON:
   236     0077                     _TMR1_Counter:
   237     0077                     	ds	1
   238                           
   239                           	psect	bssBANK0
   240     0034                     __pbssBANK0:
   241     0034                     _Segment_Counter:
   242     0034                     	ds	1
   243                           
   244                           	psect	dataBANK0
   245     0020                     __pdataBANK0:
   246     0020                     main@F1009:
   247     0020                     	ds	10
   248                           
   249                           	psect	inittext
   250     0095                     init_fetch0:	
   251                           ;	Called with low address in FSR and high address in W
   252                           
   253     0095  087E               	movf	btemp,w
   254     0096  008A               	movwf	10
   255     0097  087F               	movf	btemp+1,w
   256     0098  0082               	movwf	2
   257     0099                     init_ram0:	
   258                           ;Called with:
   259                           ;	high address of idata address in btemp 
   260                           ;	low address of idata address in btemp+1 
   261                           ;	low address of data in FSR
   262                           ;	high address + 1 of data in btemp-1
   263                           
   264     0099  120A  118A  2095  120A  118A  	fcall	init_fetch0
   265     009E  0080               	movwf	0
   266     009F  0A84               	incf	4,f
   267     00A0  0804               	movf	4,w
   268     00A1  067D               	xorwf	btemp+-1,w
   269     00A2  1903               	btfsc	3,2
   270     00A3  3400               	retlw	0
   271     00A4  0AFF               	incf	btemp+1,f
   272     00A5  1903               	btfsc	3,2
   273     00A6  0AFE               	incf	btemp,f
   274     00A7  2899               	goto	init_ram0
   275                           
   276                           	psect	cstackCOMMON
   277     0070                     __pcstackCOMMON:
   278     0070                     ?_main:
   279     0070                     ?_ISR:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ??_ISR:	
   283                           ; 1 bytes @ 0x0
   284                           
   285                           
   286                           ; 1 bytes @ 0x0
   287     0070                     	ds	3
   288     0073                     ??_main:
   289                           
   290                           ; 1 bytes @ 0x3
   291     0073                     	ds	4
   292                           
   293                           	psect	cstackBANK0
   294     002A                     __pcstackBANK0:
   295     002A                     main@segments_code:
   296                           
   297                           ; 10 bytes @ 0x0
   298     002A                     	ds	10
   299                           
   300                           	psect	maintext
   301     0025                     __pmaintext:	
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 17 in file "main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;  segments_cod   10    0[BANK0 ] unsigned char [10]
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   316 ;; Tracked objects:
   317 ;;		On entry : B00/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   321 ;;      Params:         0       0       0       0       0
   322 ;;      Locals:         0      10       0       0       0
   323 ;;      Temps:          4       0       0       0       0
   324 ;;      Totals:         4      10       0       0       0
   325 ;;Total ram usage:       14 bytes
   326 ;; Hardware stack levels required when called: 1
   327 ;; This function calls:
   328 ;;		Nothing
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334     0025                     _main:	
   335                           ;psect for function _main
   336                           
   337     0025                     l656:	
   338                           ;incstack = 0
   339                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   340                           
   341                           
   342                           ;main.c: 19:     unsigned char segments_code[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 
      +                          0x7D, 0x07, 0x7F, 0x6F};
   343     0025  302A               	movlw	main@segments_code& (0+255)
   344     0026  0084               	movwf	4
   345     0027  3020               	movlw	low main@F1009
   346     0028  00F3               	movwf	??_main
   347     0029  0804               	movf	4,w
   348     002A  00F4               	movwf	??_main+1
   349     002B  300A               	movlw	10
   350     002C  00F5               	movwf	??_main+2
   351     002D                     u50:
   352     002D  0873               	movf	??_main,w
   353     002E  0084               	movwf	4
   354     002F  1383               	bcf	3,7	;select IRP bank0
   355     0030  0800               	movf	0,w
   356     0031  00F6               	movwf	??_main+3
   357     0032  0AF3               	incf	??_main,f
   358     0033  0874               	movf	??_main+1,w
   359     0034  0084               	movwf	4
   360     0035  0876               	movf	??_main+3,w
   361     0036  0080               	movwf	0
   362     0037  0AF4               	incf	??_main+1,f
   363     0038  0BF5               	decfsz	??_main+2,f
   364     0039  282D               	goto	u50
   365     003A                     l658:
   366                           
   367                           ;main.c: 23:     TMR1 = 15535;
   368     003A  303C               	movlw	60
   369     003B  1283               	bcf	3,5	;RP0=0, select bank0
   370     003C  1303               	bcf	3,6	;RP1=0, select bank0
   371     003D  008F               	movwf	15	;volatile
   372     003E  30AF               	movlw	175
   373     003F  008E               	movwf	14	;volatile
   374     0040                     l660:
   375                           
   376                           ;main.c: 24:     T1CKPS1 = 0;
   377     0040  1290               	bcf	16,5	;volatile
   378     0041                     l662:
   379                           
   380                           ;main.c: 25:     T1CKPS0 = 0;
   381     0041  1210               	bcf	16,4	;volatile
   382     0042                     l664:
   383                           
   384                           ;main.c: 26:     T1OSCEN = 1;
   385     0042  1590               	bsf	16,3	;volatile
   386     0043                     l666:
   387                           
   388                           ;main.c: 27:     TMR1CS = 0;
   389     0043  1090               	bcf	16,1	;volatile
   390     0044                     l668:
   391                           
   392                           ;main.c: 31:     TMR1IE = 1;
   393     0044  1683               	bsf	3,5	;RP0=1, select bank1
   394     0045  1303               	bcf	3,6	;RP1=0, select bank1
   395     0046  140C               	bsf	12,0	;volatile
   396     0047                     l670:
   397                           
   398                           ;main.c: 32:     TMR1IF = 0;
   399     0047  1283               	bcf	3,5	;RP0=0, select bank0
   400     0048  1303               	bcf	3,6	;RP1=0, select bank0
   401     0049  100C               	bcf	12,0	;volatile
   402     004A                     l672:
   403                           
   404                           ;main.c: 33:     PEIE = 1;
   405     004A  170B               	bsf	11,6	;volatile
   406     004B                     l674:
   407                           
   408                           ;main.c: 34:     GIE = 1;
   409     004B  178B               	bsf	11,7	;volatile
   410     004C                     l676:
   411                           
   412                           ;main.c: 37:     RB4 = 0;
   413     004C  1206               	bcf	6,4	;volatile
   414     004D                     l678:
   415                           
   416                           ;main.c: 38:     TRISB4 = 0;
   417     004D  1683               	bsf	3,5	;RP0=1, select bank1
   418     004E  1303               	bcf	3,6	;RP1=0, select bank1
   419     004F  1206               	bcf	6,4	;volatile
   420     0050                     l680:
   421                           
   422                           ;main.c: 40:     PORTD = 0x00;
   423     0050  1283               	bcf	3,5	;RP0=0, select bank0
   424     0051  1303               	bcf	3,6	;RP1=0, select bank0
   425     0052  0188               	clrf	8	;volatile
   426     0053                     l682:
   427                           
   428                           ;main.c: 41:     TRISD = 0x00;
   429     0053  1683               	bsf	3,5	;RP0=1, select bank1
   430     0054  1303               	bcf	3,6	;RP1=0, select bank1
   431     0055  0188               	clrf	8	;volatile
   432     0056                     l684:
   433                           
   434                           ;main.c: 42:     RA2 = 0;
   435     0056  1283               	bcf	3,5	;RP0=0, select bank0
   436     0057  1303               	bcf	3,6	;RP1=0, select bank0
   437     0058  1105               	bcf	5,2	;volatile
   438     0059                     l686:
   439                           
   440                           ;main.c: 43:     TRISA2 = 0;
   441     0059  1683               	bsf	3,5	;RP0=1, select bank1
   442     005A  1303               	bcf	3,6	;RP1=0, select bank1
   443     005B  1105               	bcf	5,2	;volatile
   444     005C                     l688:
   445                           
   446                           ;main.c: 49:     TMR1ON = 1;
   447     005C  1283               	bcf	3,5	;RP0=0, select bank0
   448     005D  1303               	bcf	3,6	;RP1=0, select bank0
   449     005E  1410               	bsf	16,0	;volatile
   450     005F                     l690:
   451                           
   452                           ;main.c: 50:     RA2 = 1;
   453     005F  1505               	bsf	5,2	;volatile
   454     0060                     l692:
   455                           
   456                           ;main.c: 53:         PORTD = segments_code[Segment_Counter];
   457     0060  0834               	movf	_Segment_Counter,w
   458     0061  3E2A               	addlw	(low (main@segments_code| 0))& (0+255)
   459     0062  0084               	movwf	4
   460     0063  0800               	movf	0,w
   461     0064  0088               	movwf	8	;volatile
   462     0065                     l694:
   463                           
   464                           ;main.c: 54:         if(Segment_Counter>9){
   465     0065  300A               	movlw	10
   466     0066  0234               	subwf	_Segment_Counter,w
   467     0067  1C03               	skipc
   468     0068  286A               	goto	u61
   469     0069  286B               	goto	u60
   470     006A                     u61:
   471     006A  2860               	goto	l692
   472     006B                     u60:
   473     006B                     l696:
   474                           
   475                           ;main.c: 55:             Segment_Counter = 0;
   476     006B  01B4               	clrf	_Segment_Counter
   477     006C  2860               	goto	l692
   478     006D  120A  118A  280E   	ljmp	start
   479     0070                     __end_of_main:
   480                           
   481                           	psect	text1
   482     0070                     __ptext1:	
   483 ;; *************** function _ISR *****************
   484 ;; Defined at:
   485 ;;		line 64 in file "main.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, btemp+1
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0
   501 ;;      Temps:          3       0       0       0       0
   502 ;;      Totals:         3       0       0       0       0
   503 ;;Total ram usage:        3 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		Interrupt level 1
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512     0070                     _ISR:	
   513                           ;psect for function _ISR
   514                           
   515     0070                     i1l698:
   516                           
   517                           ;main.c: 66:     if(TMR1IF)
   518     0070  1283               	bcf	3,5	;RP0=0, select bank0
   519     0071  1303               	bcf	3,6	;RP1=0, select bank0
   520     0072  1C0C               	btfss	12,0	;volatile
   521     0073  2875               	goto	u7_21
   522     0074  2876               	goto	u7_20
   523     0075                     u7_21:
   524     0075  288C               	goto	i1l54
   525     0076                     u7_20:
   526     0076                     i1l700:
   527                           
   528                           ;main.c: 67:     {;main.c: 68:         TMR1_Counter++;
   529     0076  3001               	movlw	1
   530     0077  00FF               	movwf	btemp+1
   531     0078  087F               	movf	btemp+1,w
   532     0079  07F7               	addwf	_TMR1_Counter,f
   533     007A                     i1l702:
   534                           
   535                           ;main.c: 69:         if(TMR1_Counter == 20 )
   536     007A  3014               	movlw	20
   537     007B  0677               	xorwf	_TMR1_Counter,w
   538     007C  1D03               	btfss	3,2
   539     007D  287F               	goto	u8_21
   540     007E  2880               	goto	u8_20
   541     007F                     u8_21:
   542     007F  2887               	goto	i1l710
   543     0080                     u8_20:
   544     0080                     i1l704:
   545                           
   546                           ;main.c: 70:         {;main.c: 71:             RB4 = ~RB4;
   547     0080  3010               	movlw	16
   548     0081  0686               	xorwf	6,f
   549     0082                     i1l706:
   550                           
   551                           ;main.c: 72:             Segment_Counter++;
   552     0082  3001               	movlw	1
   553     0083  00FF               	movwf	btemp+1
   554     0084  087F               	movf	btemp+1,w
   555     0085  07B4               	addwf	_Segment_Counter,f
   556     0086                     i1l708:
   557                           
   558                           ;main.c: 73:             TMR1_Counter = 0;
   559     0086  01F7               	clrf	_TMR1_Counter
   560     0087                     i1l710:
   561                           
   562                           ;main.c: 75:         TMR1 = 15535;
   563     0087  303C               	movlw	60
   564     0088  008F               	movwf	15	;volatile
   565     0089  30AF               	movlw	175
   566     008A  008E               	movwf	14	;volatile
   567     008B                     i1l712:
   568                           
   569                           ;main.c: 76:         TMR1IF = 0;
   570     008B  100C               	bcf	12,0	;volatile
   571     008C                     i1l54:
   572     008C  0872               	movf	??_ISR+2,w
   573     008D  00FF               	movwf	btemp+1
   574     008E  0871               	movf	??_ISR+1,w
   575     008F  008A               	movwf	10
   576     0090  0E70               	swapf	??_ISR,w
   577     0091  0083               	movwf	3
   578     0092  0EFE               	swapf	btemp,f
   579     0093  0E7E               	swapf	btemp,w
   580     0094  0009               	retfie
   581     0095                     __end_of_ISR:
   582     007E                     btemp	set	126	;btemp
   583     007E                     wtemp0	set	126
   584                           
   585                           	psect	intentry
   586     0004                     __pintentry:	
   587                           ;incstack = 0
   588                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   589                           
   590     0004                     interrupt_function:
   591     007E                     saved_w	set	btemp
   592     0004  00FE               	movwf	btemp
   593     0005  0E03               	swapf	3,w
   594     0006  00F0               	movwf	??_ISR
   595     0007  080A               	movf	10,w
   596     0008  00F1               	movwf	??_ISR+1
   597     0009  087F               	movf	btemp+1,w
   598     000A  00F2               	movwf	??_ISR+2
   599     000B  120A  118A  2870   	ljmp	_ISR
   600                           
   601                           	psect	config
   602                           
   603                           ;Config register CONFIG @ 0x2007
   604                           ;	Oscillator Selection bits
   605                           ;	FOSC = HS, HS oscillator
   606                           ;	Watchdog Timer Enable bit
   607                           ;	WDTE = OFF, WDT disabled
   608                           ;	Power-up Timer Enable bit
   609                           ;	PWRTE = OFF, PWRT disabled
   610                           ;	Brown-out Reset Enable bit
   611                           ;	BOREN = ON, BOR enabled
   612                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   613                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   614                           ;	Data EEPROM Memory Code Protection bit
   615                           ;	CPD = OFF, Data EEPROM code protection off
   616                           ;	Flash Program Memory Write Enable bits
   617                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   618                           ;	In-Circuit Debugger Mode bit
   619                           ;	DEBUG = 0x1, unprogrammed default
   620                           ;	Flash Program Memory Code Protection bit
   621                           ;	CP = OFF, Code protection off
   622     2007                     	org	8199
   623     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     10      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0      24
                                              3 COMMON     4     4      0
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jun 11 17:23:22 2024

                      pc 0002                       u50 002D                       u60 006B  
                     u61 006A                       fsr 0004                      l660 0040  
                    l670 0047                      l662 0041                      l680 0050  
                    l672 004A                      l664 0042                      l656 0025  
                    l690 005F                      l682 0053                      l674 004B  
                    l666 0043                      l658 003A                      l692 0060  
                    l684 0056                      l676 004C                      l668 0044  
                    l694 0065                      l686 0059                      l678 004D  
                    l696 006B                      l688 005C                      _GIE 005F  
                    _RA2 002A                      _RB4 0034                      _ISR 0070  
                    fsr0 0004                      indf 0000                     ?_ISR 0070  
                   _PEIE 005E                     i1l54 008C                     _TMR1 000E  
                   u7_20 0076                     u7_21 0075                     u8_20 0080  
                   u8_21 007F                     _main 0025                     btemp 007E  
                   start 000E                    ??_ISR 0070                    ?_main 0070  
                  i1l700 0076                    i1l710 0087                    i1l702 007A  
                  i1l712 008B                    i1l704 0080                    i1l706 0082  
                  i1l708 0086                    i1l698 0070                    _PORTD 0008  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0070  
                 ??_main 0073                   _TMR1IE 0460                   _TMR1IF 0060  
                 _TMR1CS 0081                   _TMR1ON 0080                   _TRISA2 042A  
                 _TRISB4 0434                   saved_w 007E  __end_of__initialization 0021  
         __pcstackCOMMON 0070             __pidataBANK0 00A8               __pbssBANK0 0034  
             __pmaintext 0025               __pintentry 0004                  _T1CKPS0 0084  
                _T1CKPS1 0085                  _T1OSCEN 0083        main@segments_code 002A  
                __ptext1 0070     end_of_initialization 0021      start_initialization 0011  
            __end_of_ISR 0095               init_fetch0 0095              __pdataBANK0 0020  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 002A  
      interrupt_function 0004                main@F1009 0020          _Segment_Counter 0034  
           _TMR1_Counter 0077                 init_ram0 0099                 intlevel1 0000  
