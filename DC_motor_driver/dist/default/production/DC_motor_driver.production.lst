

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jun 13 16:37:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0011                     _TMR2	set	17
   169     0008                     _PORTD	set	8
   170     0015                     _CCPR1L	set	21
   171     0031                     _RB1	set	49
   172     0032                     _RB2	set	50
   173     0030                     _RB0	set	48
   174     0035                     _RB5	set	53
   175     0034                     _RB4	set	52
   176     0033                     _RB3	set	51
   177     005E                     _PEIE	set	94
   178     005F                     _GIE	set	95
   179     00BA                     _CCP1M2	set	186
   180     00BB                     _CCP1M3	set	187
   181     0090                     _T2CKPS0	set	144
   182     0091                     _T2CKPS1	set	145
   183     0092                     _TMR2ON	set	146
   184     0093                     _TOUTPS0	set	147
   185     0094                     _TOUTPS1	set	148
   186     0095                     _TOUTPS2	set	149
   187     0096                     _TOUTPS3	set	150
   188     0043                     _RD3	set	67
   189     0042                     _RD2	set	66
   190     0041                     _RD1	set	65
   191     0040                     _RD0	set	64
   192     00BC                     _CCP1Y	set	188
   193     00BD                     _CCP1X	set	189
   194     0088                     _TRISD	set	136
   195     0086                     _TRISB	set	134
   196     0092                     _PR2	set	146
   197     043A                     _TRISC2	set	1082
   198                           
   199                           	psect	cinit
   200     07FC                     start_initialization:	
   201                           ; #config settings
   202                           
   203     07FC                     __initialization:
   204     07FC                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207     07FC                     __end_of__initialization:
   208     07FC  0183               	clrf	3
   209     07FD  120A  118A  2F7B   	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	cstackCOMMON
   212     0070                     __pcstackCOMMON:
   213     0070                     ?_PWM1_DutyCycle:
   214     0070                     ?_DC_Reverse:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ??_DC_Reverse:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ?_DC_Start:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ??_DC_Start:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ?_DC_Stop:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ??_DC_Stop:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     ?_main:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     PWM1_DutyCycle@DC:	
   236                           ; 1 bytes @ 0x0
   237                           
   238                           
   239                           ; 2 bytes @ 0x0
   240     0070                     	ds	2
   241     0072                     ??_PWM1_DutyCycle:
   242                           
   243                           ; 1 bytes @ 0x2
   244     0072                     	ds	2
   245     0074                     ??_main:
   246                           
   247                           ; 1 bytes @ 0x4
   248     0074                     	ds	2
   249                           
   250                           	psect	maintext
   251     077B                     __pmaintext:	
   252 ;;
   253 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   254 ;;
   255 ;; *************** function _main *****************
   256 ;; Defined at:
   257 ;;		line 46 in file "main.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2, status,0, pclath, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : B00/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   271 ;;      Params:         0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0
   273 ;;      Temps:          2       0       0       0       0
   274 ;;      Totals:         2       0       0       0       0
   275 ;;Total ram usage:        2 bytes
   276 ;; Hardware stack levels required when called: 1
   277 ;; This function calls:
   278 ;;		_DC_Reverse
   279 ;;		_DC_Start
   280 ;;		_DC_Stop
   281 ;;		_PWM1_DutyCycle
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287     077B                     _main:	
   288                           ;psect for function _main
   289                           
   290     077B                     l694:	
   291                           ;incstack = 0
   292                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   293                           
   294                           
   295                           ;main.c: 49:     TOUTPS3 = 0;
   296     077B  1283               	bcf	3,5	;RP0=0, select bank0
   297     077C  1303               	bcf	3,6	;RP1=0, select bank0
   298     077D  1312               	bcf	18,6	;volatile
   299                           
   300                           ;main.c: 50:     TOUTPS2 = 0;
   301     077E  1292               	bcf	18,5	;volatile
   302                           
   303                           ;main.c: 51:     TOUTPS1 = 0;
   304     077F  1212               	bcf	18,4	;volatile
   305                           
   306                           ;main.c: 52:     TOUTPS0 = 0;
   307     0780  1192               	bcf	18,3	;volatile
   308                           
   309                           ;main.c: 53:     TMR2ON = 0;
   310     0781  1112               	bcf	18,2	;volatile
   311                           
   312                           ;main.c: 54:     T2CKPS1 = 0;
   313     0782  1092               	bcf	18,1	;volatile
   314                           
   315                           ;main.c: 55:     T2CKPS0 = 1;
   316     0783  1412               	bsf	18,0	;volatile
   317     0784                     l696:
   318                           
   319                           ;main.c: 56:     TMR2 = 0;
   320     0784  0191               	clrf	17	;volatile
   321     0785                     l698:
   322                           
   323                           ;main.c: 59:     CCP1M3 = 1;
   324     0785  1597               	bsf	23,3	;volatile
   325     0786                     l700:
   326                           
   327                           ;main.c: 60:     CCP1M2 = 1;
   328     0786  1517               	bsf	23,2	;volatile
   329     0787                     l702:
   330                           
   331                           ;main.c: 120:     PR2 = 124;
   332     0787  307C               	movlw	124
   333     0788  1683               	bsf	3,5	;RP0=1, select bank1
   334     0789  1303               	bcf	3,6	;RP1=0, select bank1
   335     078A  0092               	movwf	18	;volatile
   336     078B                     l704:
   337                           
   338                           ;main.c: 123:     TRISC2 = 0;
   339     078B  1107               	bcf	7,2	;volatile
   340     078C                     l706:
   341                           
   342                           ;main.c: 125:     TRISB = 0xFF;
   343     078C  30FF               	movlw	255
   344     078D  0086               	movwf	6	;volatile
   345                           
   346                           ;main.c: 128:     PORTD = 0x00;
   347     078E  1283               	bcf	3,5	;RP0=0, select bank0
   348     078F  1303               	bcf	3,6	;RP1=0, select bank0
   349     0790  0188               	clrf	8	;volatile
   350                           
   351                           ;main.c: 129:     TRISD = 0x00;
   352     0791  1683               	bsf	3,5	;RP0=1, select bank1
   353     0792  1303               	bcf	3,6	;RP1=0, select bank1
   354     0793  0188               	clrf	8	;volatile
   355     0794                     l708:
   356                           
   357                           ;main.c: 132:     GIE = 1;
   358     0794  178B               	bsf	11,7	;volatile
   359     0795                     l710:
   360                           
   361                           ;main.c: 133:     PEIE = 1;
   362     0795  170B               	bsf	11,6	;volatile
   363     0796                     l712:
   364                           
   365                           ;main.c: 136:     PWM1_DutyCycle(250);
   366     0796  30FA               	movlw	250
   367     0797  00F0               	movwf	PWM1_DutyCycle@DC
   368     0798  3000               	movlw	0
   369     0799  00F1               	movwf	PWM1_DutyCycle@DC+1
   370     079A  120A  118A  2763  120A  118A  	fcall	_PWM1_DutyCycle
   371     079F                     l714:
   372                           
   373                           ;main.c: 137:     TMR2ON = 1;
   374     079F  1283               	bcf	3,5	;RP0=0, select bank0
   375     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   376     07A1  1512               	bsf	18,2	;volatile
   377     07A2                     l716:
   378                           
   379                           ;main.c: 140:     {;main.c: 141:         if(!RB3)
   380     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   381     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   382     07A4  1986               	btfsc	6,3	;volatile
   383     07A5  2FA7               	goto	u111
   384     07A6  2FA8               	goto	u110
   385     07A7                     u111:
   386     07A7  2FB1               	goto	l720
   387     07A8                     u110:
   388     07A8                     l718:
   389                           
   390                           ;main.c: 142:             PWM1_DutyCycle(500);
   391     07A8  30F4               	movlw	244
   392     07A9  00F0               	movwf	PWM1_DutyCycle@DC
   393     07AA  3001               	movlw	1
   394     07AB  00F1               	movwf	PWM1_DutyCycle@DC+1
   395     07AC  120A  118A  2763  120A  118A  	fcall	_PWM1_DutyCycle
   396     07B1                     l720:
   397                           
   398                           ;main.c: 143:         if(!RB4)
   399     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   400     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   401     07B3  1A06               	btfsc	6,4	;volatile
   402     07B4  2FB6               	goto	u121
   403     07B5  2FB7               	goto	u120
   404     07B6                     u121:
   405     07B6  2FC0               	goto	l724
   406     07B7                     u120:
   407     07B7                     l722:
   408                           
   409                           ;main.c: 144:             PWM1_DutyCycle(250);
   410     07B7  30FA               	movlw	250
   411     07B8  00F0               	movwf	PWM1_DutyCycle@DC
   412     07B9  3000               	movlw	0
   413     07BA  00F1               	movwf	PWM1_DutyCycle@DC+1
   414     07BB  120A  118A  2763  120A  118A  	fcall	_PWM1_DutyCycle
   415     07C0                     l724:
   416                           
   417                           ;main.c: 145:         if(!RB5)
   418     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   419     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   420     07C2  1A86               	btfsc	6,5	;volatile
   421     07C3  2FC5               	goto	u131
   422     07C4  2FC6               	goto	u130
   423     07C5                     u131:
   424     07C5  2FCE               	goto	l728
   425     07C6                     u130:
   426     07C6                     l726:
   427                           
   428                           ;main.c: 146:             PWM1_DutyCycle(0);
   429     07C6  3000               	movlw	0
   430     07C7  00F0               	movwf	PWM1_DutyCycle@DC
   431     07C8  00F1               	movwf	PWM1_DutyCycle@DC+1
   432     07C9  120A  118A  2763  120A  118A  	fcall	_PWM1_DutyCycle
   433     07CE                     l728:
   434                           
   435                           ;main.c: 149:         if(!RB0)
   436     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   437     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   438     07D0  1806               	btfsc	6,0	;volatile
   439     07D1  2FD3               	goto	u141
   440     07D2  2FD4               	goto	u140
   441     07D3                     u141:
   442     07D3  2FD9               	goto	l732
   443     07D4                     u140:
   444     07D4                     l730:
   445                           
   446                           ;main.c: 150:             DC_Reverse();
   447     07D4  120A  118A  2758  120A  118A  	fcall	_DC_Reverse
   448     07D9                     l732:
   449                           
   450                           ;main.c: 151:         if(!RB2)
   451     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   452     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   453     07DB  1906               	btfsc	6,2	;volatile
   454     07DC  2FDE               	goto	u151
   455     07DD  2FDF               	goto	u150
   456     07DE                     u151:
   457     07DE  2FE4               	goto	l736
   458     07DF                     u150:
   459     07DF                     l734:
   460                           
   461                           ;main.c: 152:             DC_Start();
   462     07DF  120A  118A  2753  120A  118A  	fcall	_DC_Start
   463     07E4                     l736:
   464                           
   465                           ;main.c: 153:         if(!RB1)
   466     07E4  1283               	bcf	3,5	;RP0=0, select bank0
   467     07E5  1303               	bcf	3,6	;RP1=0, select bank0
   468     07E6  1886               	btfsc	6,1	;volatile
   469     07E7  2FE9               	goto	u161
   470     07E8  2FEA               	goto	u160
   471     07E9                     u161:
   472     07E9  2FEF               	goto	l740
   473     07EA                     u160:
   474     07EA                     l738:
   475                           
   476                           ;main.c: 154:             DC_Stop();
   477     07EA  120A  118A  274F  120A  118A  	fcall	_DC_Stop
   478     07EF                     l740:
   479                           
   480                           ;main.c: 157:     _delay((unsigned long)((100)*(4000000/4000.0)));
   481     07EF  3082               	movlw	130
   482     07F0  00F5               	movwf	??_main+1
   483     07F1  30DD               	movlw	221
   484     07F2  00F4               	movwf	??_main
   485     07F3                     u177:
   486     07F3  0BF4               	decfsz	??_main,f
   487     07F4  2FF3               	goto	u177
   488     07F5  0BF5               	decfsz	??_main+1,f
   489     07F6  2FF3               	goto	u177
   490     07F7  2FF8               	nop2
   491     07F8  2FA2               	goto	l716
   492     07F9  120A  118A  2800   	ljmp	start
   493     07FC                     __end_of_main:
   494                           
   495                           	psect	text1
   496     0763                     __ptext1:	
   497 ;; *************** function _PWM1_DutyCycle *****************
   498 ;; Defined at:
   499 ;;		line 19 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  DC              2    0[COMMON] unsigned short 
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         2       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0
   515 ;;      Temps:          2       0       0       0       0
   516 ;;      Totals:         4       0       0       0       0
   517 ;;Total ram usage:        4 bytes
   518 ;; Hardware stack levels used: 1
   519 ;; This function calls:
   520 ;;		Nothing
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526     0763                     _PWM1_DutyCycle:	
   527                           ;psect for function _PWM1_DutyCycle
   528                           
   529     0763                     l690:	
   530                           ;incstack = 0
   531                           ; Regs used in _PWM1_DutyCycle: [wreg+status,2+status,0]
   532                           
   533                           
   534                           ;main.c: 19: void PWM1_DutyCycle(uint16_t DC);main.c: 20: {;main.c: 21:     CCP1X = (DC)
      +                           & 1;
   535     0763  1870               	btfsc	PWM1_DutyCycle@DC,0
   536     0764  2F66               	goto	u91
   537     0765  2F6A               	goto	u90
   538     0766                     u91:
   539     0766  1283               	bcf	3,5	;RP0=0, select bank0
   540     0767  1303               	bcf	3,6	;RP1=0, select bank0
   541     0768  1697               	bsf	23,5	;volatile
   542     0769  2F6D               	goto	u104
   543     076A                     u90:
   544     076A  1283               	bcf	3,5	;RP0=0, select bank0
   545     076B  1303               	bcf	3,6	;RP1=0, select bank0
   546     076C  1297               	bcf	23,5	;volatile
   547     076D                     u104:
   548                           
   549                           ;main.c: 22:     CCP1Y = (DC) & 2;
   550     076D  1217               	bcf	23,4	;volatile
   551     076E                     l692:
   552                           
   553                           ;main.c: 23:     CCPR1L = (DC) >> 2;
   554     076E  0871               	movf	PWM1_DutyCycle@DC+1,w
   555     076F  00F3               	movwf	??_PWM1_DutyCycle+1
   556     0770  0870               	movf	PWM1_DutyCycle@DC,w
   557     0771  00F2               	movwf	??_PWM1_DutyCycle
   558     0772  1003               	clrc
   559     0773  0CF3               	rrf	??_PWM1_DutyCycle+1,f
   560     0774  0CF2               	rrf	??_PWM1_DutyCycle,f
   561     0775  1003               	clrc
   562     0776  0CF3               	rrf	??_PWM1_DutyCycle+1,f
   563     0777  0CF2               	rrf	??_PWM1_DutyCycle,f
   564     0778  0872               	movf	??_PWM1_DutyCycle,w
   565     0779  0095               	movwf	21	;volatile
   566     077A                     l65:
   567     077A  0008               	return
   568     077B                     __end_of_PWM1_DutyCycle:
   569                           
   570                           	psect	text2
   571     074F                     __ptext2:	
   572 ;; *************** function _DC_Stop *****************
   573 ;; Defined at:
   574 ;;		line 41 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		status,2
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601     074F                     _DC_Stop:	
   602                           ;psect for function _DC_Stop
   603                           
   604     074F                     l640:	
   605                           ;incstack = 0
   606                           ; Regs used in _DC_Stop: [status,2]
   607                           
   608                           
   609                           ;main.c: 43:     PORTD = 0x00;
   610     074F  1283               	bcf	3,5	;RP0=0, select bank0
   611     0750  1303               	bcf	3,6	;RP1=0, select bank0
   612     0751  0188               	clrf	8	;volatile
   613     0752                     l74:
   614     0752  0008               	return
   615     0753                     __end_of_DC_Stop:
   616                           
   617                           	psect	text3
   618     0753                     __ptext3:	
   619 ;; *************** function _DC_Start *****************
   620 ;; Defined at:
   621 ;;		line 36 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648     0753                     _DC_Start:	
   649                           ;psect for function _DC_Start
   650                           
   651     0753                     l638:	
   652                           ;incstack = 0
   653                           ; Regs used in _DC_Start: [wreg]
   654                           
   655                           
   656                           ;main.c: 38:     PORTD = 0x0A;
   657     0753  300A               	movlw	10
   658     0754  1283               	bcf	3,5	;RP0=0, select bank0
   659     0755  1303               	bcf	3,6	;RP1=0, select bank0
   660     0756  0088               	movwf	8	;volatile
   661     0757                     l71:
   662     0757  0008               	return
   663     0758                     __end_of_DC_Start:
   664                           
   665                           	psect	text4
   666     0758                     __ptext4:	
   667 ;; *************** function _DC_Reverse *****************
   668 ;; Defined at:
   669 ;;		line 26 in file "main.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used: 1
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696     0758                     _DC_Reverse:	
   697                           ;psect for function _DC_Reverse
   698                           
   699     0758                     l636:	
   700                           ;incstack = 0
   701                           ; Regs used in _DC_Reverse: [wreg]
   702                           
   703                           
   704                           ;main.c: 28:     RD0 = ~RD0;
   705     0758  3001               	movlw	1
   706     0759  1283               	bcf	3,5	;RP0=0, select bank0
   707     075A  1303               	bcf	3,6	;RP1=0, select bank0
   708     075B  0688               	xorwf	8,f
   709                           
   710                           ;main.c: 29:     RD1 = ~RD1;
   711     075C  3002               	movlw	2
   712     075D  0688               	xorwf	8,f
   713                           
   714                           ;main.c: 30:     RD2 = ~RD2;
   715     075E  3004               	movlw	4
   716     075F  0688               	xorwf	8,f
   717                           
   718                           ;main.c: 31:     RD3 = ~RD3;
   719     0760  3008               	movlw	8
   720     0761  0688               	xorwf	8,f
   721     0762                     l68:
   722     0762  0008               	return
   723     0763                     __end_of_DC_Reverse:
   724     007E                     btemp	set	126	;btemp
   725     007E                     wtemp0	set	126
   726                           
   727                           	psect	config
   728                           
   729                           ;Config register CONFIG @ 0x2007
   730                           ;	Oscillator Selection bits
   731                           ;	FOSC = HS, HS oscillator
   732                           ;	Watchdog Timer Enable bit
   733                           ;	WDTE = OFF, WDT disabled
   734                           ;	Power-up Timer Enable bit
   735                           ;	PWRTE = OFF, PWRT disabled
   736                           ;	Brown-out Reset Enable bit
   737                           ;	BOREN = ON, BOR enabled
   738                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   739                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   740                           ;	Data EEPROM Memory Code Protection bit
   741                           ;	CPD = OFF, Data EEPROM code protection off
   742                           ;	Flash Program Memory Write Enable bits
   743                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   744                           ;	In-Circuit Debugger Mode bit
   745                           ;	DEBUG = 0x1, unprogrammed default
   746                           ;	Flash Program Memory Code Protection bit
   747                           ;	CP = OFF, Code protection off
   748     2007                     	org	8199
   749     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_DutyCycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     348
                                              4 COMMON     2     2      0
                         _DC_Reverse
                           _DC_Start
                            _DC_Stop
                     _PWM1_DutyCycle
 ---------------------------------------------------------------------------------
 (1) _PWM1_DutyCycle                                       4     2      2     348
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DC_Stop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DC_Start                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DC_Reverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DC_Reverse
   _DC_Start
   _DC_Stop
   _PWM1_DutyCycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jun 13 16:37:24 2024

                     l71 0757                       l65 077A                       l74 0752  
                     l68 0762                       u90 076A                       u91 0766  
                    l700 0786                      l710 0795                      l702 0787  
                    l640 074F                      l720 07B1                      l712 0796  
                    l704 078B                      l730 07D4                      l722 07B7  
                    l714 079F                      l706 078C                      l636 0758  
                    l740 07EF                      l732 07D9                      l724 07C0  
                    l716 07A2                      l708 0794                      l638 0753  
                    l734 07DF                      l726 07C6                      l718 07A8  
                    l736 07E4                      l728 07CE                      l690 0763  
                    l738 07EA                      l692 076E                      l694 077B  
                    l696 0784                      l698 0785                      _GIE 005F  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RD0 0040                      _RB4 0034  
                    _RD1 0041                      _RB5 0035                      _RD2 0042  
                    _RD3 0043                      u110 07A8                      u111 07A7  
                    u104 076D                      u120 07B7                      u121 07B6  
                    u130 07C6                      u131 07C5                      u140 07D4  
                    u141 07D3                      u150 07DF                      u151 07DE  
                    u160 07EA                      u161 07E9                      _PR2 0092  
                    u177 07F3          __end_of_DC_Stop 0753                     _PEIE 005E  
                   _TMR2 0011                     _main 077B                     btemp 007E  
                   start 0000         __end_of_DC_Start 0758                    ?_main 0070  
                  _CCP1X 00BD                    _CCP1Y 00BC                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0074                ??_DC_Stop 0070                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _CCPR1L 0015                   _TMR2ON 0092  
                 _TRISC2 043A  __end_of__initialization 07FC                ?_DC_Start 0070  
           ??_DC_Reverse 0070           __pcstackCOMMON 0070       __end_of_DC_Reverse 0763  
             ??_DC_Start 0070               __pmaintext 077B                  _T2CKPS0 0090  
                _T2CKPS1 0091                  _DC_Stop 074F                  _TOUTPS0 0093  
                _TOUTPS1 0094                  _TOUTPS2 0095                  _TOUTPS3 0096  
                __ptext1 0763                  __ptext2 074F                  __ptext3 0753  
                __ptext4 0758     end_of_initialization 07FC           _PWM1_DutyCycle 0763  
 __end_of_PWM1_DutyCycle 077B      start_initialization 07FC          ?_PWM1_DutyCycle 0070  
               ?_DC_Stop 0070                ___latbits 0002                 _DC_Start 0753  
       ??_PWM1_DutyCycle 0072               _DC_Reverse 0758         PWM1_DutyCycle@DC 0070  
            ?_DC_Reverse 0070  
