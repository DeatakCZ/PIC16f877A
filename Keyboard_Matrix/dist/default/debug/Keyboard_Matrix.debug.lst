

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jun 25 19:34:52 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0008                     _PORTD	set	8
   166     0034                     _RB4	set	52
   167     0033                     _RB3	set	51
   168     0039                     _RC1	set	57
   169     0038                     _RC0	set	56
   170     0030                     _RB0	set	48
   171     0031                     _RB1	set	49
   172     0032                     _RB2	set	50
   173     0088                     _TRISD	set	136
   174     0086                     _TRISB	set	134
   175     0439                     _TRISC1	set	1081
   176     0438                     _TRISC0	set	1080
   177                           
   178                           	psect	cinit
   179     07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07FC                     __initialization:
   183     07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FC                     __end_of__initialization:
   187     07FC  0183               	clrf	3
   188     07FD  120A  118A  2F58   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0071                     __pcstackCOMMON:
   192     0071                     ?_readMatrix:
   193     0071                     ??_readMatrix:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0071                     ?_main:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 1 bytes @ 0x0
   201     0071                     	ds	1
   202     0072                     readMatrix@i:
   203                           
   204                           ; 2 bytes @ 0x1
   205     0072                     	ds	2
   206     0074                     readMatrix@data:
   207                           
   208                           ; 1 bytes @ 0x3
   209     0074                     	ds	1
   210     0075                     ??_main:
   211                           
   212                           ; 1 bytes @ 0x4
   213     0075                     	ds	3
   214     0078                     main@i:
   215                           
   216                           ; 1 bytes @ 0x7
   217     0078                     	ds	1
   218     0079                     main@i_50:
   219                           
   220                           ; 1 bytes @ 0x8
   221     0079                     	ds	1
   222     007A                     main@i_52:
   223                           
   224                           ; 1 bytes @ 0x9
   225     007A                     	ds	1
   226                           
   227                           	psect	maintext
   228     0758                     __pmaintext:	
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 56 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  i               1    9[COMMON] unsigned char 
   239 ;;  i               1    8[COMMON] unsigned char 
   240 ;;  i               1    7[COMMON] unsigned char 
   241 ;;  data            1    0        unsigned char 
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : B00/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   251 ;;      Params:         0       0       0       0       0
   252 ;;      Locals:         3       0       0       0       0
   253 ;;      Temps:          3       0       0       0       0
   254 ;;      Totals:         6       0       0       0       0
   255 ;;Total ram usage:        6 bytes
   256 ;; Hardware stack levels required when called: 1
   257 ;; This function calls:
   258 ;;		_readMatrix
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264     0758                     _main:	
   265                           ;psect for function _main
   266                           
   267     0758                     l624:	
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   270                           
   271                           
   272                           ;main.c: 60:     RC0 = 0;
   273     0758  1283               	bcf	3,5	;RP0=0, select bank0
   274     0759  1303               	bcf	3,6	;RP1=0, select bank0
   275     075A  1007               	bcf	7,0	;volatile
   276                           
   277                           ;main.c: 61:     RC1 = 1;
   278     075B  1487               	bsf	7,1	;volatile
   279                           
   280                           ;main.c: 62:     TRISC0 = 0;
   281     075C  1683               	bsf	3,5	;RP0=1, select bank1
   282     075D  1303               	bcf	3,6	;RP1=0, select bank1
   283     075E  1007               	bcf	7,0	;volatile
   284                           
   285                           ;main.c: 63:     TRISC1 = 0;
   286     075F  1087               	bcf	7,1	;volatile
   287                           
   288                           ;main.c: 68:     RB1 = 1;
   289     0760  1283               	bcf	3,5	;RP0=0, select bank0
   290     0761  1303               	bcf	3,6	;RP1=0, select bank0
   291     0762  1486               	bsf	6,1	;volatile
   292                           
   293                           ;main.c: 69:     RB2 = 0;
   294     0763  1106               	bcf	6,2	;volatile
   295                           
   296                           ;main.c: 70:     RB3 = 0;
   297     0764  1186               	bcf	6,3	;volatile
   298                           
   299                           ;main.c: 71:     RB4 = 0;
   300     0765  1206               	bcf	6,4	;volatile
   301     0766                     l626:
   302                           
   303                           ;main.c: 72:     TRISB = 0x01;
   304     0766  3001               	movlw	1
   305     0767  1683               	bsf	3,5	;RP0=1, select bank1
   306     0768  1303               	bcf	3,6	;RP1=0, select bank1
   307     0769  0086               	movwf	6	;volatile
   308     076A                     l628:
   309                           
   310                           ;main.c: 75:     PORTD = 0x00;
   311     076A  1283               	bcf	3,5	;RP0=0, select bank0
   312     076B  1303               	bcf	3,6	;RP1=0, select bank0
   313     076C  0188               	clrf	8	;volatile
   314     076D                     l630:
   315                           
   316                           ;main.c: 76:     TRISD = 0x00;
   317     076D  1683               	bsf	3,5	;RP0=1, select bank1
   318     076E  1303               	bcf	3,6	;RP1=0, select bank1
   319     076F  0188               	clrf	8	;volatile
   320     0770                     l632:
   321     0770                     l634:
   322                           
   323                           ;main.c: 82:     PORTD = 0xFF;
   324     0770  30FF               	movlw	255
   325     0771  1283               	bcf	3,5	;RP0=0, select bank0
   326     0772  1303               	bcf	3,6	;RP1=0, select bank0
   327     0773  0088               	movwf	8	;volatile
   328     0774                     l636:
   329                           
   330                           ;main.c: 83:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   331     0774  3015               	movlw	21
   332     0775  00F7               	movwf	??_main+2
   333     0776  304B               	movlw	75
   334     0777  00F6               	movwf	??_main+1
   335     0778  30BE               	movlw	190
   336     0779  00F5               	movwf	??_main
   337     077A                     u67:
   338     077A  0BF5               	decfsz	??_main,f
   339     077B  2F7A               	goto	u67
   340     077C  0BF6               	decfsz	??_main+1,f
   341     077D  2F7A               	goto	u67
   342     077E  0BF7               	decfsz	??_main+2,f
   343     077F  2F7A               	goto	u67
   344     0780  0000               	nop
   345     0781                     l638:
   346                           
   347                           ;main.c: 84:     PORTD = 0x00;
   348     0781  1283               	bcf	3,5	;RP0=0, select bank0
   349     0782  1303               	bcf	3,6	;RP1=0, select bank0
   350     0783  0188               	clrf	8	;volatile
   351                           
   352                           ;main.c: 85:     _delay((unsigned long)((500)*(16000000/4000.0)));
   353     0784  300B               	movlw	11
   354     0785  00F7               	movwf	??_main+2
   355     0786  3026               	movlw	38
   356     0787  00F6               	movwf	??_main+1
   357     0788  305D               	movlw	93
   358     0789  00F5               	movwf	??_main
   359     078A                     u77:
   360     078A  0BF5               	decfsz	??_main,f
   361     078B  2F8A               	goto	u77
   362     078C  0BF6               	decfsz	??_main+1,f
   363     078D  2F8A               	goto	u77
   364     078E  0BF7               	decfsz	??_main+2,f
   365     078F  2F8A               	goto	u77
   366     0790  2F91               	nop2
   367     0791                     l640:
   368                           
   369                           ;main.c: 88:     RB4 = 1;
   370     0791  1283               	bcf	3,5	;RP0=0, select bank0
   371     0792  1303               	bcf	3,6	;RP1=0, select bank0
   372     0793  1606               	bsf	6,4	;volatile
   373     0794                     l642:
   374                           
   375                           ;main.c: 89:     for(uint8_t i = 0 ; i < 8 ; i++ )
   376     0794  01F8               	clrf	main@i
   377     0795                     l37:
   378                           
   379                           ;main.c: 90:     {;main.c: 91:         RB1 = 0;
   380     0795  1086               	bcf	6,1	;volatile
   381     0796                     l648:
   382                           
   383                           ;main.c: 92:         _delay((unsigned long)((4)*(16000000/4000000.0)));
   384     0796  3005               	movlw	5
   385     0797  00F5               	movwf	??_main
   386     0798                     u87:
   387     0798  0BF5               	decfsz	??_main,f
   388     0799  2F98               	goto	u87
   389     079A                     l650:
   390                           
   391                           ;main.c: 93:         RB1 = 1;
   392     079A  1283               	bcf	3,5	;RP0=0, select bank0
   393     079B  1303               	bcf	3,6	;RP1=0, select bank0
   394     079C  1486               	bsf	6,1	;volatile
   395     079D                     l652:
   396                           
   397                           ;main.c: 94:     }
   398     079D  3001               	movlw	1
   399     079E  00FF               	movwf	btemp+1
   400     079F  087F               	movf	btemp+1,w
   401     07A0  07F8               	addwf	main@i,f
   402     07A1                     l654:
   403     07A1  3008               	movlw	8
   404     07A2  0278               	subwf	main@i,w
   405     07A3  1C03               	skipc
   406     07A4  2FA6               	goto	u31
   407     07A5  2FA7               	goto	u30
   408     07A6                     u31:
   409     07A6  2F95               	goto	l37
   410     07A7                     u30:
   411     07A7                     l38:
   412                           
   413                           ;main.c: 95:     RB4 = 0;
   414     07A7  1206               	bcf	6,4	;volatile
   415     07A8                     l656:
   416                           
   417                           ;main.c: 98:     {;main.c: 100:         for( uint8_t i = 0 ; i < 4 ; i++ )
   418     07A8  01F9               	clrf	main@i_50
   419     07A9                     l662:
   420                           
   421                           ;main.c: 101:         {;main.c: 102:             PORTD = readMatrix();
   422     07A9  120A  118A  2717  120A  118A  	fcall	_readMatrix
   423     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   424     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   425     07B0  0088               	movwf	8	;volatile
   426     07B1                     l664:
   427                           
   428                           ;main.c: 104:             RB3 = 1;
   429     07B1  1586               	bsf	6,3	;volatile
   430     07B2                     l666:
   431                           
   432                           ;main.c: 105:             _delay((unsigned long)((4)*(16000000/4000000.0)));
   433     07B2  3005               	movlw	5
   434     07B3  00F5               	movwf	??_main
   435     07B4                     u97:
   436     07B4  0BF5               	decfsz	??_main,f
   437     07B5  2FB4               	goto	u97
   438     07B6                     l668:
   439                           
   440                           ;main.c: 106:             RB3 = 0;
   441     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   442     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   443     07B8  1186               	bcf	6,3	;volatile
   444     07B9                     l670:
   445                           
   446                           ;main.c: 107:             _delay((unsigned long)((4)*(16000000/4000000.0)));
   447     07B9  3005               	movlw	5
   448     07BA  00F5               	movwf	??_main
   449     07BB                     u107:
   450     07BB  0BF5               	decfsz	??_main,f
   451     07BC  2FBB               	goto	u107
   452     07BD                     l672:
   453                           
   454                           ;main.c: 109:             _delay((unsigned long)((200)*(16000000/4000.0)));
   455     07BD  3005               	movlw	5
   456     07BE  00F7               	movwf	??_main+2
   457     07BF  300F               	movlw	15
   458     07C0  00F6               	movwf	??_main+1
   459     07C1  30F1               	movlw	241
   460     07C2  00F5               	movwf	??_main
   461     07C3                     u117:
   462     07C3  0BF5               	decfsz	??_main,f
   463     07C4  2FC3               	goto	u117
   464     07C5  0BF6               	decfsz	??_main+1,f
   465     07C6  2FC3               	goto	u117
   466     07C7  0BF7               	decfsz	??_main+2,f
   467     07C8  2FC3               	goto	u117
   468     07C9                     l674:
   469                           
   470                           ;main.c: 110:         }
   471     07C9  3001               	movlw	1
   472     07CA  00FF               	movwf	btemp+1
   473     07CB  087F               	movf	btemp+1,w
   474     07CC  07F9               	addwf	main@i_50,f
   475     07CD                     l676:
   476     07CD  3004               	movlw	4
   477     07CE  0279               	subwf	main@i_50,w
   478     07CF  1C03               	skipc
   479     07D0  2FD2               	goto	u41
   480     07D1  2FD3               	goto	u40
   481     07D2                     u41:
   482     07D2  2FA9               	goto	l662
   483     07D3                     u40:
   484     07D3                     l678:
   485                           
   486                           ;main.c: 112:         for( uint8_t i = 0 ; i < 4 ; i++ )
   487     07D3  01FA               	clrf	main@i_52
   488     07D4                     l42:
   489                           
   490                           ;main.c: 113:         {;main.c: 114:             RB3 = 1;
   491     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   492     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   493     07D6  1586               	bsf	6,3	;volatile
   494     07D7                     l684:
   495                           
   496                           ;main.c: 115:             _delay((unsigned long)((4)*(16000000/4000000.0)));
   497     07D7  3005               	movlw	5
   498     07D8  00F5               	movwf	??_main
   499     07D9                     u127:
   500     07D9  0BF5               	decfsz	??_main,f
   501     07DA  2FD9               	goto	u127
   502     07DB                     l686:
   503                           
   504                           ;main.c: 116:             RB3 = 0;
   505     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   506     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   507     07DD  1186               	bcf	6,3	;volatile
   508                           
   509                           ;main.c: 117:             _delay((unsigned long)((4)*(16000000/4000000.0)));
   510     07DE  3005               	movlw	5
   511     07DF  00F5               	movwf	??_main
   512     07E0                     u137:
   513     07E0  0BF5               	decfsz	??_main,f
   514     07E1  2FE0               	goto	u137
   515     07E2                     l688:
   516                           
   517                           ;main.c: 118:         }
   518     07E2  3001               	movlw	1
   519     07E3  00FF               	movwf	btemp+1
   520     07E4  087F               	movf	btemp+1,w
   521     07E5  07FA               	addwf	main@i_52,f
   522     07E6                     l690:
   523     07E6  3004               	movlw	4
   524     07E7  027A               	subwf	main@i_52,w
   525     07E8  1C03               	skipc
   526     07E9  2FEB               	goto	u51
   527     07EA  2FEC               	goto	u50
   528     07EB                     u51:
   529     07EB  2FD4               	goto	l42
   530     07EC                     u50:
   531     07EC                     l692:
   532                           
   533                           ;main.c: 120:         _delay((unsigned long)((200)*(16000000/4000.0)));
   534     07EC  3005               	movlw	5
   535     07ED  00F7               	movwf	??_main+2
   536     07EE  300F               	movlw	15
   537     07EF  00F6               	movwf	??_main+1
   538     07F0  30F1               	movlw	241
   539     07F1  00F5               	movwf	??_main
   540     07F2                     u147:
   541     07F2  0BF5               	decfsz	??_main,f
   542     07F3  2FF2               	goto	u147
   543     07F4  0BF6               	decfsz	??_main+1,f
   544     07F5  2FF2               	goto	u147
   545     07F6  0BF7               	decfsz	??_main+2,f
   546     07F7  2FF2               	goto	u147
   547     07F8  2FA8               	goto	l656
   548     07F9  120A  118A  2801   	ljmp	start
   549     07FC                     __end_of_main:
   550                           
   551                           	psect	text1
   552     0717                     __ptext1:	
   553 ;; *************** function _readMatrix *****************
   554 ;; Defined at:
   555 ;;		line 28 in file "main.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  i               2    1[COMMON] int 
   560 ;;  data            1    3[COMMON] unsigned char 
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      unsigned char 
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0, btemp+1
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   570 ;;      Params:         0       0       0       0       0
   571 ;;      Locals:         3       0       0       0       0
   572 ;;      Temps:          1       0       0       0       0
   573 ;;      Totals:         4       0       0       0       0
   574 ;;Total ram usage:        4 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583     0717                     _readMatrix:	
   584                           ;psect for function _readMatrix
   585                           
   586     0717                     l590:	
   587                           ;incstack = 0
   588                           ; Regs used in _readMatrix: [wreg+status,2+status,0+btemp+1]
   589                           
   590                           
   591                           ;main.c: 30:     uint8_t data = 0x0;
   592     0717  01F4               	clrf	readMatrix@data
   593     0718                     l592:
   594                           
   595                           ;main.c: 32:     RB2 = 1;
   596     0718  1283               	bcf	3,5	;RP0=0, select bank0
   597     0719  1303               	bcf	3,6	;RP1=0, select bank0
   598     071A  1506               	bsf	6,2	;volatile
   599     071B                     l594:
   600                           
   601                           ;main.c: 33:     _delay((unsigned long)((4)*(16000000/4000000.0)));
   602     071B  3005               	movlw	5
   603     071C  00F1               	movwf	??_readMatrix
   604     071D                     u157:
   605     071D  0BF1               	decfsz	??_readMatrix,f
   606     071E  2F1D               	goto	u157
   607     071F                     l596:
   608                           
   609                           ;main.c: 34:     RB2 = 0;
   610     071F  1283               	bcf	3,5	;RP0=0, select bank0
   611     0720  1303               	bcf	3,6	;RP1=0, select bank0
   612     0721  1106               	bcf	6,2	;volatile
   613     0722                     l598:
   614                           
   615                           ;main.c: 36:     for(int i = 0 ; i < 8 ; i++)
   616     0722  01F2               	clrf	readMatrix@i
   617     0723  01F3               	clrf	readMatrix@i+1
   618     0724                     l29:
   619                           
   620                           ;main.c: 37:     {;main.c: 38:         RB1 = 0;
   621     0724  1283               	bcf	3,5	;RP0=0, select bank0
   622     0725  1303               	bcf	3,6	;RP1=0, select bank0
   623     0726  1086               	bcf	6,1	;volatile
   624     0727                     l604:
   625                           
   626                           ;main.c: 39:         _delay((unsigned long)((4)*(16000000/4000000.0)));
   627     0727  3005               	movlw	5
   628     0728  00F1               	movwf	??_readMatrix
   629     0729                     u167:
   630     0729  0BF1               	decfsz	??_readMatrix,f
   631     072A  2F29               	goto	u167
   632     072B                     l606:
   633                           
   634                           ;main.c: 40:         data = ( data << 1 );
   635     072B  0874               	movf	readMatrix@data,w
   636     072C  00F1               	movwf	??_readMatrix
   637     072D  0771               	addwf	??_readMatrix,w
   638     072E  00F4               	movwf	readMatrix@data
   639     072F                     l608:
   640                           
   641                           ;main.c: 41:         if(RB0)
   642     072F  1283               	bcf	3,5	;RP0=0, select bank0
   643     0730  1303               	bcf	3,6	;RP1=0, select bank0
   644     0731  1C06               	btfss	6,0	;volatile
   645     0732  2F34               	goto	u11
   646     0733  2F35               	goto	u10
   647     0734                     u11:
   648     0734  2F38               	goto	l612
   649     0735                     u10:
   650     0735                     l610:
   651                           
   652                           ;main.c: 42:         {;main.c: 43:             data = data | 0x1;
   653     0735  0874               	movf	readMatrix@data,w
   654     0736  3801               	iorlw	1
   655     0737  00F4               	movwf	readMatrix@data
   656     0738                     l612:
   657                           
   658                           ;main.c: 45:         RB1 = 1;
   659     0738  1486               	bsf	6,1	;volatile
   660     0739                     l614:
   661                           
   662                           ;main.c: 46:         _delay((unsigned long)((4)*(16000000/4000000.0)));
   663     0739  3005               	movlw	5
   664     073A  00F1               	movwf	??_readMatrix
   665     073B                     u177:
   666     073B  0BF1               	decfsz	??_readMatrix,f
   667     073C  2F3B               	goto	u177
   668     073D                     l616:
   669                           
   670                           ;main.c: 47:     }
   671     073D  3001               	movlw	1
   672     073E  07F2               	addwf	readMatrix@i,f
   673     073F  1803               	skipnc
   674     0740  0AF3               	incf	readMatrix@i+1,f
   675     0741  3000               	movlw	0
   676     0742  07F3               	addwf	readMatrix@i+1,f
   677     0743                     l618:
   678     0743  0873               	movf	readMatrix@i+1,w
   679     0744  3A80               	xorlw	128
   680     0745  00FF               	movwf	btemp+1
   681     0746  3080               	movlw	128
   682     0747  027F               	subwf	btemp+1,w
   683     0748  1D03               	skipz
   684     0749  2F4C               	goto	u25
   685     074A  3008               	movlw	8
   686     074B  0272               	subwf	readMatrix@i,w
   687     074C                     u25:
   688     074C  1C03               	skipc
   689     074D  2F4F               	goto	u21
   690     074E  2F50               	goto	u20
   691     074F                     u21:
   692     074F  2F24               	goto	l29
   693     0750                     u20:
   694     0750                     l620:
   695                           
   696                           ;main.c: 49:     RC0 = ~RC0;
   697     0750  3001               	movlw	1
   698     0751  1283               	bcf	3,5	;RP0=0, select bank0
   699     0752  1303               	bcf	3,6	;RP1=0, select bank0
   700     0753  0687               	xorwf	7,f
   701                           
   702                           ;main.c: 50:     RC1 = ~RC1;
   703     0754  3002               	movlw	2
   704     0755  0687               	xorwf	7,f
   705                           
   706                           ;main.c: 51:     return data;
   707     0756  0874               	movf	readMatrix@data,w
   708     0757                     l32:
   709     0757  0008               	return
   710     0758                     __end_of_readMatrix:
   711     007E                     btemp	set	126	;btemp
   712     007E                     wtemp0	set	126
   713                           
   714                           	psect	config
   715                           
   716                           ;Config register CONFIG @ 0x2007
   717                           ;	Oscillator Selection bits
   718                           ;	FOSC = HS, HS oscillator
   719                           ;	Watchdog Timer Enable bit
   720                           ;	WDTE = OFF, WDT disabled
   721                           ;	Power-up Timer Enable bit
   722                           ;	PWRTE = OFF, PWRT disabled
   723                           ;	Brown-out Reset Enable bit
   724                           ;	BOREN = ON, BOR enabled
   725                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   726                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   727                           ;	Data EEPROM Memory Code Protection bit
   728                           ;	CPD = OFF, Data EEPROM code protection off
   729                           ;	Flash Program Memory Write Enable bits
   730                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   731                           ;	In-Circuit Debugger Mode bit
   732                           ;	DEBUG = 0x1, unprogrammed default
   733                           ;	Flash Program Memory Code Protection bit
   734                           ;	CP = OFF, Code protection off
   735     2007                     	org	8199
   736     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_readMatrix

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     165
                                              4 COMMON     6     6      0
                         _readMatrix
 ---------------------------------------------------------------------------------
 (1) _readMatrix                                           4     4      0      75
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _readMatrix

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      A       A       1       76.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jun 25 19:34:52 2024

                     l32 0757                       l42 07D4                       l29 0724  
                     l37 0795                       l38 07A7                       u10 0735  
                     u11 0734                       u20 0750                       u21 074F  
                     u30 07A7                       u31 07A6                       u40 07D3  
                     u25 074C                       u41 07D2                       u50 07EC  
                     u51 07EB                       u67 077A                       u77 078A  
                     u87 0798                       u97 07B4                      l610 0735  
                    l620 0750                      l612 0738                      l604 0727  
                    l614 0739                      l606 072B                      l630 076D  
                    l616 073D                      l608 072F                      l640 0791  
                    l632 0770                      l624 0758                      l618 0743  
                    l650 079A                      l642 0794                      l634 0770  
                    l626 0766                      l652 079D                      l636 0774  
                    l628 076A                      l590 0717                      l670 07B9  
                    l662 07A9                      l654 07A1                      l638 0781  
                    l592 0718                      l672 07BD                      l664 07B1  
                    l656 07A8                      l648 0796                      l594 071B  
                    l690 07E6                      l674 07C9                      l666 07B2  
                    l596 071F                      l692 07EC                      l684 07D7  
                    l676 07CD                      l668 07B6                      l598 0722  
                    l686 07DB                      l678 07D3                      l688 07E2  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RC0 0038                      _RC1 0039                      _RB3 0033  
                    _RB4 0034                      u107 07BB                      u117 07C3  
                    u127 07D9                      u137 07E0                      u147 07F2  
                    u157 071D                      u167 0729                      u177 073B  
                   _main 0758                     btemp 007E                     start 0001  
                  ?_main 0071                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    main@i 0078                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0075                   _TRISC0 0438                   _TRISC1 0439  
            readMatrix@i 0072  __end_of__initialization 07FC           __pcstackCOMMON 0071  
             __pmaintext 0758               _readMatrix 0717                  __ptext1 0717  
   end_of_initialization 07FC              ?_readMatrix 0071      start_initialization 07FC  
         readMatrix@data 0074                ___latbits 0002             ??_readMatrix 0071  
     __end_of_readMatrix 0758                 main@i_50 0079                 main@i_52 007A  
