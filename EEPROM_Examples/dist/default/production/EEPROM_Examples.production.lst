

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jun 14 11:27:19 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0008                     _PORTD	set	8
   167     000B                     _INTCONbits	set	11
   168     0033                     _RB3	set	51
   169     0032                     _RB2	set	50
   170     0031                     _RB1	set	49
   171     0030                     _RB0	set	48
   172     0088                     _TRISD	set	136
   173     0086                     _TRISB	set	134
   174     010C                     _EEDATA	set	268
   175     010D                     _EEADR	set	269
   176     018D                     _EECON2	set	397
   177     018C                     _EECON1bits	set	396
   178                           
   179                           	psect	cinit
   180     07FC                     start_initialization:	
   181                           ; #config settings
   182                           
   183     07FC                     __initialization:
   184     07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     07FC                     __end_of__initialization:
   188     07FC  0183               	clrf	3
   189     07FD  120A  118A  2F58   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192     0070                     __pcstackCOMMON:
   193     0070                     ?_Write:
   194     0070                     ?_Read:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0070                     ??_Read:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ?_main:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     Write@Data:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     Read@Address:	
   207                           ; 1 bytes @ 0x0
   208                           
   209                           
   210                           ; 1 bytes @ 0x0
   211     0070                     	ds	1
   212     0071                     ??_Write:
   213     0071                     Write@Address:	
   214                           ; 1 bytes @ 0x1
   215                           
   216     0071                     Read@Data:	
   217                           ; 1 bytes @ 0x1
   218                           
   219                           
   220                           ; 1 bytes @ 0x1
   221     0071                     	ds	1
   222     0072                     ??_main:
   223                           
   224                           ; 1 bytes @ 0x2
   225     0072                     	ds	3
   226     0075                     main@CurAddr:
   227                           
   228                           ; 1 bytes @ 0x5
   229     0075                     	ds	1
   230                           
   231                           	psect	maintext
   232     0758                     __pmaintext:	
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 55 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;  CurAddr         1    5[COMMON] unsigned char 
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : B00/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   252 ;;      Params:         0       0       0       0       0
   253 ;;      Locals:         1       0       0       0       0
   254 ;;      Temps:          3       0       0       0       0
   255 ;;      Totals:         4       0       0       0       0
   256 ;;Total ram usage:        4 bytes
   257 ;; Hardware stack levels required when called: 1
   258 ;; This function calls:
   259 ;;		_Read
   260 ;;		_Write
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266     0758                     _main:	
   267                           ;psect for function _main
   268                           
   269     0758                     l688:	
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   272                           
   273                           
   274                           ;main.c: 58:     TRISB = 0x0F;
   275     0758  300F               	movlw	15
   276     0759  1683               	bsf	3,5	;RP0=1, select bank1
   277     075A  1303               	bcf	3,6	;RP1=0, select bank1
   278     075B  0086               	movwf	6	;volatile
   279     075C                     l690:
   280                           
   281                           ;main.c: 59:     PORTD = 0x00;
   282     075C  1283               	bcf	3,5	;RP0=0, select bank0
   283     075D  1303               	bcf	3,6	;RP1=0, select bank0
   284     075E  0188               	clrf	8	;volatile
   285     075F                     l692:
   286                           
   287                           ;main.c: 60:     TRISD = 0x00;
   288     075F  1683               	bsf	3,5	;RP0=1, select bank1
   289     0760  1303               	bcf	3,6	;RP1=0, select bank1
   290     0761  0188               	clrf	8	;volatile
   291     0762                     l694:
   292                           
   293                           ;main.c: 62:     uint8_t CurAddr = 0x00;
   294     0762  01F5               	clrf	main@CurAddr
   295     0763                     l696:
   296                           
   297                           ;main.c: 66:     {;main.c: 67:         if(!RB0)
   298     0763  1283               	bcf	3,5	;RP0=0, select bank0
   299     0764  1303               	bcf	3,6	;RP1=0, select bank0
   300     0765  1806               	btfsc	6,0	;volatile
   301     0766  2F68               	goto	u81
   302     0767  2F69               	goto	u80
   303     0768                     u81:
   304     0768  2F82               	goto	l704
   305     0769                     u80:
   306     0769                     l698:
   307                           
   308                           ;main.c: 68:         {;main.c: 69:             Write(CurAddr, 3);
   309     0769  3003               	movlw	3
   310     076A  00F0               	movwf	Write@Data
   311     076B  0875               	movf	main@CurAddr,w
   312     076C  120A  118A  273D  120A  118A  	fcall	_Write
   313     0771                     l700:
   314                           
   315                           ;main.c: 70:             CurAddr++;
   316     0771  3001               	movlw	1
   317     0772  00FF               	movwf	btemp+1
   318     0773  087F               	movf	btemp+1,w
   319     0774  07F5               	addwf	main@CurAddr,f
   320     0775                     l702:
   321                           
   322                           ;main.c: 71:             _delay((unsigned long)((500)*(4000000/4000.0)));
   323     0775  3003               	movlw	3
   324     0776  00F4               	movwf	??_main+2
   325     0777  308A               	movlw	138
   326     0778  00F3               	movwf	??_main+1
   327     0779  3055               	movlw	85
   328     077A  00F2               	movwf	??_main
   329     077B                     u137:
   330     077B  0BF2               	decfsz	??_main,f
   331     077C  2F7B               	goto	u137
   332     077D  0BF3               	decfsz	??_main+1,f
   333     077E  2F7B               	goto	u137
   334     077F  0BF4               	decfsz	??_main+2,f
   335     0780  2F7B               	goto	u137
   336     0781  2F82               	nop2
   337     0782                     l704:
   338                           
   339                           ;main.c: 73:         if(!RB1)
   340     0782  1283               	bcf	3,5	;RP0=0, select bank0
   341     0783  1303               	bcf	3,6	;RP1=0, select bank0
   342     0784  1886               	btfsc	6,1	;volatile
   343     0785  2F87               	goto	u91
   344     0786  2F88               	goto	u90
   345     0787                     u91:
   346     0787  2FA1               	goto	l712
   347     0788                     u90:
   348     0788                     l706:
   349                           
   350                           ;main.c: 74:         {;main.c: 75:             Write(CurAddr, 5);
   351     0788  3005               	movlw	5
   352     0789  00F0               	movwf	Write@Data
   353     078A  0875               	movf	main@CurAddr,w
   354     078B  120A  118A  273D  120A  118A  	fcall	_Write
   355     0790                     l708:
   356                           
   357                           ;main.c: 76:             CurAddr++;
   358     0790  3001               	movlw	1
   359     0791  00FF               	movwf	btemp+1
   360     0792  087F               	movf	btemp+1,w
   361     0793  07F5               	addwf	main@CurAddr,f
   362     0794                     l710:
   363                           
   364                           ;main.c: 77:             _delay((unsigned long)((500)*(4000000/4000.0)));
   365     0794  3003               	movlw	3
   366     0795  00F4               	movwf	??_main+2
   367     0796  308A               	movlw	138
   368     0797  00F3               	movwf	??_main+1
   369     0798  3055               	movlw	85
   370     0799  00F2               	movwf	??_main
   371     079A                     u147:
   372     079A  0BF2               	decfsz	??_main,f
   373     079B  2F9A               	goto	u147
   374     079C  0BF3               	decfsz	??_main+1,f
   375     079D  2F9A               	goto	u147
   376     079E  0BF4               	decfsz	??_main+2,f
   377     079F  2F9A               	goto	u147
   378     07A0  2FA1               	nop2
   379     07A1                     l712:
   380                           
   381                           ;main.c: 79:         if(!RB2)
   382     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   383     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   384     07A3  1906               	btfsc	6,2	;volatile
   385     07A4  2FA6               	goto	u101
   386     07A5  2FA7               	goto	u100
   387     07A6                     u101:
   388     07A6  2FC0               	goto	l720
   389     07A7                     u100:
   390     07A7                     l714:
   391                           
   392                           ;main.c: 80:         {;main.c: 81:             Write(CurAddr, 7);
   393     07A7  3007               	movlw	7
   394     07A8  00F0               	movwf	Write@Data
   395     07A9  0875               	movf	main@CurAddr,w
   396     07AA  120A  118A  273D  120A  118A  	fcall	_Write
   397     07AF                     l716:
   398                           
   399                           ;main.c: 82:             CurAddr++;
   400     07AF  3001               	movlw	1
   401     07B0  00FF               	movwf	btemp+1
   402     07B1  087F               	movf	btemp+1,w
   403     07B2  07F5               	addwf	main@CurAddr,f
   404     07B3                     l718:
   405                           
   406                           ;main.c: 83:             _delay((unsigned long)((500)*(4000000/4000.0)));
   407     07B3  3003               	movlw	3
   408     07B4  00F4               	movwf	??_main+2
   409     07B5  308A               	movlw	138
   410     07B6  00F3               	movwf	??_main+1
   411     07B7  3055               	movlw	85
   412     07B8  00F2               	movwf	??_main
   413     07B9                     u157:
   414     07B9  0BF2               	decfsz	??_main,f
   415     07BA  2FB9               	goto	u157
   416     07BB  0BF3               	decfsz	??_main+1,f
   417     07BC  2FB9               	goto	u157
   418     07BD  0BF4               	decfsz	??_main+2,f
   419     07BE  2FB9               	goto	u157
   420     07BF  2FC0               	nop2
   421     07C0                     l720:
   422                           
   423                           ;main.c: 85:         if(!RB3)
   424     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   425     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   426     07C2  1986               	btfsc	6,3	;volatile
   427     07C3  2FC5               	goto	u111
   428     07C4  2FC6               	goto	u110
   429     07C5                     u111:
   430     07C5  2F63               	goto	l696
   431     07C6                     u110:
   432     07C6                     l722:
   433                           
   434                           ;main.c: 86:         {;main.c: 87:             CurAddr = 0x00;
   435     07C6  01F5               	clrf	main@CurAddr
   436                           
   437                           ;main.c: 89:             while(CurAddr != 0x03)
   438     07C7  2FF2               	goto	l734
   439     07C8                     l724:
   440                           
   441                           ;main.c: 90:             {;main.c: 92:                 PORTD = Read(CurAddr);
   442     07C8  0875               	movf	main@CurAddr,w
   443     07C9  120A  118A  272E  120A  118A  	fcall	_Read
   444     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   445     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   446     07D0  0088               	movwf	8	;volatile
   447     07D1                     l726:
   448                           
   449                           ;main.c: 93:                 CurAddr++;
   450     07D1  3001               	movlw	1
   451     07D2  00FF               	movwf	btemp+1
   452     07D3  087F               	movf	btemp+1,w
   453     07D4  07F5               	addwf	main@CurAddr,f
   454     07D5                     l728:
   455                           
   456                           ;main.c: 94:                 _delay((unsigned long)((1500)*(4000000/4000.0)));
   457     07D5  3008               	movlw	8
   458     07D6  00F4               	movwf	??_main+2
   459     07D7  309D               	movlw	157
   460     07D8  00F3               	movwf	??_main+1
   461     07D9  3005               	movlw	5
   462     07DA  00F2               	movwf	??_main
   463     07DB                     u167:
   464     07DB  0BF2               	decfsz	??_main,f
   465     07DC  2FDB               	goto	u167
   466     07DD  0BF3               	decfsz	??_main+1,f
   467     07DE  2FDB               	goto	u167
   468     07DF  0BF4               	decfsz	??_main+2,f
   469     07E0  2FDB               	goto	u167
   470     07E1  2FE2               	nop2
   471     07E2                     l730:
   472                           
   473                           ;main.c: 95:                 PORTD = 0x00;
   474     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   475     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   476     07E4  0188               	clrf	8	;volatile
   477     07E5                     l732:
   478                           
   479                           ;main.c: 96:                 _delay((unsigned long)((500)*(4000000/4000.0)));
   480     07E5  3003               	movlw	3
   481     07E6  00F4               	movwf	??_main+2
   482     07E7  308A               	movlw	138
   483     07E8  00F3               	movwf	??_main+1
   484     07E9  3055               	movlw	85
   485     07EA  00F2               	movwf	??_main
   486     07EB                     u177:
   487     07EB  0BF2               	decfsz	??_main,f
   488     07EC  2FEB               	goto	u177
   489     07ED  0BF3               	decfsz	??_main+1,f
   490     07EE  2FEB               	goto	u177
   491     07EF  0BF4               	decfsz	??_main+2,f
   492     07F0  2FEB               	goto	u177
   493     07F1  2FF2               	nop2
   494     07F2                     l734:
   495                           
   496                           ;main.c: 89:             while(CurAddr != 0x03)
   497     07F2  3003               	movlw	3
   498     07F3  0675               	xorwf	main@CurAddr,w
   499     07F4  1D03               	btfss	3,2
   500     07F5  2FF7               	goto	u121
   501     07F6  2FF8               	goto	u120
   502     07F7                     u121:
   503     07F7  2FC8               	goto	l724
   504     07F8                     u120:
   505     07F8  2F62               	goto	l694
   506     07F9  120A  118A  2800   	ljmp	start
   507     07FC                     __end_of_main:
   508                           
   509                           	psect	text1
   510     073D                     __ptext1:	
   511 ;; *************** function _Write *****************
   512 ;; Defined at:
   513 ;;		line 28 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  Address         1    wreg     unsigned char 
   516 ;;  Data            1    0[COMMON] unsigned char 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  Address         1    1[COMMON] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         1       0       0       0       0
   529 ;;      Locals:         1       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0
   531 ;;      Totals:         2       0       0       0       0
   532 ;;Total ram usage:        2 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541     073D                     _Write:	
   542                           ;psect for function _Write
   543                           
   544                           
   545                           ;incstack = 0
   546                           ; Regs used in _Write: [wreg]
   547                           ;Write@Address stored from wreg
   548     073D  00F1               	movwf	Write@Address
   549     073E                     l670:
   550     073E                     l29:	
   551                           ;main.c: 28: void Write(uint8_t Address, uint8_t Data);main.c: 29: {;main.c: 30:     whi
      +                          le(EECON1bits.WR);
   552                           
   553     073E  1683               	bsf	3,5	;RP0=1, select bank3
   554     073F  1703               	bsf	3,6	;RP1=1, select bank3
   555     0740  188C               	btfsc	12,1	;volsfr
   556     0741  2F43               	goto	u71
   557     0742  2F44               	goto	u70
   558     0743                     u71:
   559     0743  2F3E               	goto	l29
   560     0744                     u70:
   561     0744                     l672:
   562                           
   563                           ;main.c: 31:     EEADR = Address;
   564     0744  0871               	movf	Write@Address,w
   565     0745  1283               	bcf	3,5	;RP0=0, select bank2
   566     0746  1703               	bsf	3,6	;RP1=1, select bank2
   567     0747  008D               	movwf	13	;volatile
   568                           
   569                           ;main.c: 32:     EEDATA = Data;
   570     0748  0870               	movf	Write@Data,w
   571     0749  008C               	movwf	12	;volatile
   572     074A                     l674:
   573                           
   574                           ;main.c: 33:     EECON1bits.EEPGD = 0;
   575     074A  1683               	bsf	3,5	;RP0=1, select bank3
   576     074B  1703               	bsf	3,6	;RP1=1, select bank3
   577     074C  138C               	bcf	12,7	;volsfr
   578     074D                     l676:
   579                           
   580                           ;main.c: 34:     EECON1bits.WREN = 1;
   581     074D  150C               	bsf	12,2	;volsfr
   582     074E                     l678:
   583                           
   584                           ;main.c: 35:     INTCONbits.GIE = 0;
   585     074E  138B               	bcf	11,7	;volatile
   586                           
   587                           ;main.c: 36:     EECON2 = 0x55;
   588     074F  3055               	movlw	85
   589     0750  008D               	movwf	13	;volsfr
   590                           
   591                           ;main.c: 37:     EECON2 = 0xAA;
   592     0751  30AA               	movlw	170
   593     0752  008D               	movwf	13	;volsfr
   594     0753                     l680:
   595                           
   596                           ;main.c: 38:     EECON1bits.WR = 1;
   597     0753  148C               	bsf	12,1	;volsfr
   598     0754                     l682:
   599                           
   600                           ;main.c: 39:     INTCONbits.GIE = 1;
   601     0754  178B               	bsf	11,7	;volatile
   602     0755                     l684:
   603                           
   604                           ;main.c: 40:     EECON1bits.WREN = 0;
   605     0755  110C               	bcf	12,2	;volsfr
   606     0756                     l686:
   607                           
   608                           ;main.c: 41:     EECON1bits.WR = 0;
   609     0756  108C               	bcf	12,1	;volsfr
   610     0757                     l32:
   611     0757  0008               	return
   612     0758                     __end_of_Write:
   613                           
   614                           	psect	text2
   615     072E                     __ptext2:	
   616 ;; *************** function _Read *****************
   617 ;; Defined at:
   618 ;;		line 44 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  Address         1    wreg     unsigned char 
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  Address         1    0[COMMON] unsigned char 
   623 ;;  Data            1    1[COMMON] unsigned char 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      unsigned char 
   626 ;; Registers used:
   627 ;;		wreg
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         2       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0
   636 ;;      Totals:         2       0       0       0       0
   637 ;;Total ram usage:        2 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646     072E                     _Read:	
   647                           ;psect for function _Read
   648                           
   649                           
   650                           ;incstack = 0
   651                           ; Regs used in _Read: [wreg]
   652                           ;Read@Address stored from wreg
   653     072E  00F0               	movwf	Read@Address
   654     072F                     l612:
   655                           
   656                           ;main.c: 44: uint8_t Read(uint8_t Address);main.c: 45: {;main.c: 46:     uint8_t Data;;m
      +                          ain.c: 47:     EEADR = Address;
   657     072F  0870               	movf	Read@Address,w
   658     0730  1283               	bcf	3,5	;RP0=0, select bank2
   659     0731  1703               	bsf	3,6	;RP1=1, select bank2
   660     0732  008D               	movwf	13	;volatile
   661     0733                     l614:
   662                           
   663                           ;main.c: 48:     EECON1bits.EEPGD = 0;
   664     0733  1683               	bsf	3,5	;RP0=1, select bank3
   665     0734  1703               	bsf	3,6	;RP1=1, select bank3
   666     0735  138C               	bcf	12,7	;volsfr
   667     0736                     l616:
   668                           
   669                           ;main.c: 49:     EECON1bits.RD = 1;
   670     0736  140C               	bsf	12,0	;volsfr
   671                           
   672                           ;main.c: 50:     Data = EEDATA;
   673     0737  1283               	bcf	3,5	;RP0=0, select bank2
   674     0738  1703               	bsf	3,6	;RP1=1, select bank2
   675     0739  080C               	movf	12,w	;volatile
   676     073A  00F1               	movwf	Read@Data
   677                           
   678                           ;main.c: 51:     return Data;
   679     073B  0871               	movf	Read@Data,w
   680     073C                     l35:
   681     073C  0008               	return
   682     073D                     __end_of_Read:
   683     007E                     btemp	set	126	;btemp
   684     007E                     wtemp0	set	126
   685                           
   686                           	psect	config
   687                           
   688                           ;Config register CONFIG @ 0x2007
   689                           ;	Oscillator Selection bits
   690                           ;	FOSC = HS, HS oscillator
   691                           ;	Watchdog Timer Enable bit
   692                           ;	WDTE = OFF, WDT disabled
   693                           ;	Power-up Timer Enable bit
   694                           ;	PWRTE = OFF, PWRT disabled
   695                           ;	Brown-out Reset Enable bit
   696                           ;	BOREN = ON, BOR enabled
   697                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   698                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   699                           ;	Data EEPROM Memory Code Protection bit
   700                           ;	CPD = OFF, Data EEPROM code protection off
   701                           ;	Flash Program Memory Write Enable bits
   702                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   703                           ;	In-Circuit Debugger Mode bit
   704                           ;	DEBUG = 0x1, unprogrammed default
   705                           ;	Flash Program Memory Code Protection bit
   706                           ;	CP = OFF, Code protection off
   707     2007                     	org	8199
   708     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Read
    _main->_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     419
                                              2 COMMON     4     4      0
                               _Read
                              _Write
 ---------------------------------------------------------------------------------
 (1) _Write                                                2     1      1     272
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Read                                                 2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read
   _Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jun 14 11:27:19 2024

            main@CurAddr 0075                       l32 0757                       l35 073C  
                     l29 073E                       u70 0744                       u71 0743  
                     u80 0769                       u81 0768                       u90 0788  
                     u91 0787                      l612 072F                      l700 0771  
                    l614 0733                      l710 0794                      l702 0775  
                    l616 0736                      l720 07C0                      l712 07A1  
                    l704 0782                      l730 07E2                      l722 07C6  
                    l714 07A7                      l706 0788                      l732 07E5  
                    l724 07C8                      l716 07AF                      l708 0790  
                    l670 073E                      l726 07D1                      l734 07F2  
                    l718 07B3                      l680 0753                      l672 0744  
                    l728 07D5                      l682 0754                      l674 074A  
                    l690 075C                      l684 0755                      l676 074D  
                    l692 075F                      l686 0756                      l678 074E  
                    l694 0762                      l696 0763                      l688 0758  
                    l698 0769                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      u100 07A7  
                    u101 07A6                      u110 07C6                      u111 07C5  
                    u120 07F8                      u121 07F7                      u137 077B  
                    u147 079A                      u157 07B9                      u167 07DB  
                    u177 07EB              Read@Address 0070                     _Read 072E  
                   _main 0758                     btemp 007E                     start 0000  
                  ?_Read 0070                    ?_main 0070                    _EEADR 010D  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _Write 073D                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_Read 073D             __end_of_main 07FC  
                 ??_Read 0070                   ??_main 0072                   ?_Write 0070  
                 _EEDATA 010C                   _EECON2 018D             Write@Address 0071  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_Write 0758  
                ??_Write 0071               __pmaintext 0758                  __ptext1 073D  
                __ptext2 072E     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002                Write@Data 0070                 Read@Data 0071  
             _EECON1bits 018C               _INTCONbits 000B  
