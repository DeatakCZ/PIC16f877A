

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jun 14 11:13:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0008                     _PORTD	set	8
   167     000B                     _INTCONbits	set	11
   168     0033                     _RB3	set	51
   169     0032                     _RB2	set	50
   170     0031                     _RB1	set	49
   171     0030                     _RB0	set	48
   172     0088                     _TRISD	set	136
   173     0086                     _TRISB	set	134
   174     010C                     _EEDATA	set	268
   175     010D                     _EEADR	set	269
   176     018D                     _EECON2	set	397
   177     018C                     _EECON1bits	set	396
   178                           
   179                           	psect	cinit
   180     07FC                     start_initialization:	
   181                           ; #config settings
   182                           
   183     07FC                     __initialization:
   184     07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     07FC                     __end_of__initialization:
   188     07FC  0183               	clrf	3
   189     07FD  120A  118A  2F56   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192     0070                     __pcstackCOMMON:
   193     0070                     ?_Write:
   194     0070                     ?_Read:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0070                     ??_Read:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ?_main:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     Write@Data:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     Read@Address:	
   207                           ; 1 bytes @ 0x0
   208                           
   209                           
   210                           ; 1 bytes @ 0x0
   211     0070                     	ds	1
   212     0071                     ??_Write:
   213     0071                     Write@Address:	
   214                           ; 1 bytes @ 0x1
   215                           
   216     0071                     Read@Data:	
   217                           ; 1 bytes @ 0x1
   218                           
   219                           
   220                           ; 1 bytes @ 0x1
   221     0071                     	ds	1
   222     0072                     ??_main:
   223                           
   224                           ; 1 bytes @ 0x2
   225     0072                     	ds	3
   226     0075                     main@i:
   227                           
   228                           ; 2 bytes @ 0x5
   229     0075                     	ds	2
   230     0077                     main@CurAddr:
   231                           
   232                           ; 1 bytes @ 0x7
   233     0077                     	ds	1
   234                           
   235                           	psect	maintext
   236     0756                     __pmaintext:	
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 55 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  i               2    5[COMMON] int 
   247 ;;  CurAddr         1    7[COMMON] unsigned char 
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : B00/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   257 ;;      Params:         0       0       0       0       0
   258 ;;      Locals:         3       0       0       0       0
   259 ;;      Temps:          3       0       0       0       0
   260 ;;      Totals:         6       0       0       0       0
   261 ;;Total ram usage:        6 bytes
   262 ;; Hardware stack levels required when called: 1
   263 ;; This function calls:
   264 ;;		_Read
   265 ;;		_Write
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271     0756                     _main:	
   272                           ;psect for function _main
   273                           
   274     0756                     l693:	
   275                           ;incstack = 0
   276                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   277                           
   278                           
   279                           ;main.c: 58:     TRISB = 0x0F;
   280     0756  300F               	movlw	15
   281     0757  1683               	bsf	3,5	;RP0=1, select bank1
   282     0758  1303               	bcf	3,6	;RP1=0, select bank1
   283     0759  0086               	movwf	6	;volatile
   284     075A                     l695:
   285                           
   286                           ;main.c: 59:     PORTD = 0x00;
   287     075A  1283               	bcf	3,5	;RP0=0, select bank0
   288     075B  1303               	bcf	3,6	;RP1=0, select bank0
   289     075C  0188               	clrf	8	;volatile
   290     075D                     l697:
   291                           
   292                           ;main.c: 60:     TRISD = 0x00;
   293     075D  1683               	bsf	3,5	;RP0=1, select bank1
   294     075E  1303               	bcf	3,6	;RP1=0, select bank1
   295     075F  0188               	clrf	8	;volatile
   296     0760                     l699:
   297                           
   298                           ;main.c: 62:     uint8_t CurAddr = 0x00;
   299     0760  01F7               	clrf	main@CurAddr
   300     0761                     l701:
   301                           
   302                           ;main.c: 66:     {;main.c: 67:         if(!RB0)
   303     0761  1283               	bcf	3,5	;RP0=0, select bank0
   304     0762  1303               	bcf	3,6	;RP1=0, select bank0
   305     0763  1806               	btfsc	6,0	;volatile
   306     0764  2F66               	goto	u81
   307     0765  2F67               	goto	u80
   308     0766                     u81:
   309     0766  2F7C               	goto	l709
   310     0767                     u80:
   311     0767                     l703:
   312                           
   313                           ;main.c: 68:         {;main.c: 69:             Write(0x03, CurAddr);
   314     0767  0877               	movf	main@CurAddr,w
   315     0768  00F0               	movwf	Write@Data
   316     0769  3003               	movlw	3
   317     076A  120A  118A  273D  120A  118A  	fcall	_Write
   318     076F                     l705:
   319                           
   320                           ;main.c: 70:             CurAddr++;
   321     076F  3001               	movlw	1
   322     0770  00FF               	movwf	btemp+1
   323     0771  087F               	movf	btemp+1,w
   324     0772  07F7               	addwf	main@CurAddr,f
   325     0773                     l707:
   326                           
   327                           ;main.c: 71:             _delay((unsigned long)((50)*(4000000/4000.0)));
   328     0773  3041               	movlw	65
   329     0774  00F3               	movwf	??_main+1
   330     0775  30EE               	movlw	238
   331     0776  00F2               	movwf	??_main
   332     0777                     u137:
   333     0777  0BF2               	decfsz	??_main,f
   334     0778  2F77               	goto	u137
   335     0779  0BF3               	decfsz	??_main+1,f
   336     077A  2F77               	goto	u137
   337     077B  0000               	nop
   338     077C                     l709:
   339                           
   340                           ;main.c: 73:         if(!RB1)
   341     077C  1283               	bcf	3,5	;RP0=0, select bank0
   342     077D  1303               	bcf	3,6	;RP1=0, select bank0
   343     077E  1886               	btfsc	6,1	;volatile
   344     077F  2F81               	goto	u91
   345     0780  2F82               	goto	u90
   346     0781                     u91:
   347     0781  2F97               	goto	l717
   348     0782                     u90:
   349     0782                     l711:
   350                           
   351                           ;main.c: 74:         {;main.c: 75:             Write(0x05, CurAddr);
   352     0782  0877               	movf	main@CurAddr,w
   353     0783  00F0               	movwf	Write@Data
   354     0784  3005               	movlw	5
   355     0785  120A  118A  273D  120A  118A  	fcall	_Write
   356     078A                     l713:
   357                           
   358                           ;main.c: 76:             CurAddr++;
   359     078A  3001               	movlw	1
   360     078B  00FF               	movwf	btemp+1
   361     078C  087F               	movf	btemp+1,w
   362     078D  07F7               	addwf	main@CurAddr,f
   363     078E                     l715:
   364                           
   365                           ;main.c: 77:             _delay((unsigned long)((50)*(4000000/4000.0)));
   366     078E  3041               	movlw	65
   367     078F  00F3               	movwf	??_main+1
   368     0790  30EE               	movlw	238
   369     0791  00F2               	movwf	??_main
   370     0792                     u147:
   371     0792  0BF2               	decfsz	??_main,f
   372     0793  2F92               	goto	u147
   373     0794  0BF3               	decfsz	??_main+1,f
   374     0795  2F92               	goto	u147
   375     0796  0000               	nop
   376     0797                     l717:
   377                           
   378                           ;main.c: 79:         if(!RB2)
   379     0797  1283               	bcf	3,5	;RP0=0, select bank0
   380     0798  1303               	bcf	3,6	;RP1=0, select bank0
   381     0799  1906               	btfsc	6,2	;volatile
   382     079A  2F9C               	goto	u101
   383     079B  2F9D               	goto	u100
   384     079C                     u101:
   385     079C  2FB2               	goto	l725
   386     079D                     u100:
   387     079D                     l719:
   388                           
   389                           ;main.c: 80:         {;main.c: 81:             Write(0x07, CurAddr);
   390     079D  0877               	movf	main@CurAddr,w
   391     079E  00F0               	movwf	Write@Data
   392     079F  3007               	movlw	7
   393     07A0  120A  118A  273D  120A  118A  	fcall	_Write
   394     07A5                     l721:
   395                           
   396                           ;main.c: 82:             CurAddr++;
   397     07A5  3001               	movlw	1
   398     07A6  00FF               	movwf	btemp+1
   399     07A7  087F               	movf	btemp+1,w
   400     07A8  07F7               	addwf	main@CurAddr,f
   401     07A9                     l723:
   402                           
   403                           ;main.c: 83:             _delay((unsigned long)((50)*(4000000/4000.0)));
   404     07A9  3041               	movlw	65
   405     07AA  00F3               	movwf	??_main+1
   406     07AB  30EE               	movlw	238
   407     07AC  00F2               	movwf	??_main
   408     07AD                     u157:
   409     07AD  0BF2               	decfsz	??_main,f
   410     07AE  2FAD               	goto	u157
   411     07AF  0BF3               	decfsz	??_main+1,f
   412     07B0  2FAD               	goto	u157
   413     07B1  0000               	nop
   414     07B2                     l725:
   415                           
   416                           ;main.c: 85:         if(!RB3)
   417     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   418     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   419     07B4  1986               	btfsc	6,3	;volatile
   420     07B5  2FB7               	goto	u111
   421     07B6  2FB8               	goto	u110
   422     07B7                     u111:
   423     07B7  2F61               	goto	l701
   424     07B8                     u110:
   425     07B8                     l727:
   426                           
   427                           ;main.c: 86:         {;main.c: 87:             CurAddr = 0x00;
   428     07B8  01F7               	clrf	main@CurAddr
   429                           
   430                           ;main.c: 89:             for(int i = 0 ; i < 3 ; i++)
   431     07B9  01F5               	clrf	main@i
   432     07BA  01F6               	clrf	main@i+1
   433     07BB                     l733:
   434                           
   435                           ;main.c: 90:             {;main.c: 92:                 PORTD = Read(CurAddr);
   436     07BB  0877               	movf	main@CurAddr,w
   437     07BC  120A  118A  272E  120A  118A  	fcall	_Read
   438     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   439     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   440     07C3  0088               	movwf	8	;volatile
   441     07C4                     l735:
   442                           
   443                           ;main.c: 93:                 CurAddr++;
   444     07C4  3001               	movlw	1
   445     07C5  00FF               	movwf	btemp+1
   446     07C6  087F               	movf	btemp+1,w
   447     07C7  07F7               	addwf	main@CurAddr,f
   448     07C8                     l737:
   449                           
   450                           ;main.c: 94:                 _delay((unsigned long)((1500)*(4000000/4000.0)));
   451     07C8  3008               	movlw	8
   452     07C9  00F4               	movwf	??_main+2
   453     07CA  309D               	movlw	157
   454     07CB  00F3               	movwf	??_main+1
   455     07CC  3005               	movlw	5
   456     07CD  00F2               	movwf	??_main
   457     07CE                     u167:
   458     07CE  0BF2               	decfsz	??_main,f
   459     07CF  2FCE               	goto	u167
   460     07D0  0BF3               	decfsz	??_main+1,f
   461     07D1  2FCE               	goto	u167
   462     07D2  0BF4               	decfsz	??_main+2,f
   463     07D3  2FCE               	goto	u167
   464     07D4  2FD5               	nop2
   465     07D5                     l739:
   466                           
   467                           ;main.c: 95:                 PORTD = 0x00;
   468     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   469     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   470     07D7  0188               	clrf	8	;volatile
   471     07D8                     l741:
   472                           
   473                           ;main.c: 96:                 _delay((unsigned long)((500)*(4000000/4000.0)));
   474     07D8  3003               	movlw	3
   475     07D9  00F4               	movwf	??_main+2
   476     07DA  308A               	movlw	138
   477     07DB  00F3               	movwf	??_main+1
   478     07DC  3055               	movlw	85
   479     07DD  00F2               	movwf	??_main
   480     07DE                     u177:
   481     07DE  0BF2               	decfsz	??_main,f
   482     07DF  2FDE               	goto	u177
   483     07E0  0BF3               	decfsz	??_main+1,f
   484     07E1  2FDE               	goto	u177
   485     07E2  0BF4               	decfsz	??_main+2,f
   486     07E3  2FDE               	goto	u177
   487     07E4  2FE5               	nop2
   488     07E5                     l743:
   489                           
   490                           ;main.c: 97:             }
   491     07E5  3001               	movlw	1
   492     07E6  07F5               	addwf	main@i,f
   493     07E7  1803               	skipnc
   494     07E8  0AF6               	incf	main@i+1,f
   495     07E9  3000               	movlw	0
   496     07EA  07F6               	addwf	main@i+1,f
   497     07EB                     l745:
   498     07EB  0876               	movf	main@i+1,w
   499     07EC  3A80               	xorlw	128
   500     07ED  00FF               	movwf	btemp+1
   501     07EE  3080               	movlw	128
   502     07EF  027F               	subwf	btemp+1,w
   503     07F0  1D03               	skipz
   504     07F1  2FF4               	goto	u125
   505     07F2  3003               	movlw	3
   506     07F3  0275               	subwf	main@i,w
   507     07F4                     u125:
   508     07F4  1C03               	skipc
   509     07F5  2FF7               	goto	u121
   510     07F6  2FF8               	goto	u120
   511     07F7                     u121:
   512     07F7  2FBB               	goto	l733
   513     07F8                     u120:
   514     07F8  2F60               	goto	l699
   515     07F9  120A  118A  2800   	ljmp	start
   516     07FC                     __end_of_main:
   517                           
   518                           	psect	text1
   519     073D                     __ptext1:	
   520 ;; *************** function _Write *****************
   521 ;; Defined at:
   522 ;;		line 28 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;  Address         1    wreg     unsigned char 
   525 ;;  Data            1    0[COMMON] unsigned char 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  Address         1    1[COMMON] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         1       0       0       0       0
   538 ;;      Locals:         1       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0
   540 ;;      Totals:         2       0       0       0       0
   541 ;;Total ram usage:        2 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550     073D                     _Write:	
   551                           ;psect for function _Write
   552                           
   553                           
   554                           ;incstack = 0
   555                           ; Regs used in _Write: [wreg]
   556                           ;Write@Address stored from wreg
   557     073D  00F1               	movwf	Write@Address
   558     073E                     l675:
   559     073E                     l29:	
   560                           ;main.c: 28: void Write(uint8_t Address, uint8_t Data);main.c: 29: {;main.c: 30:     whi
      +                          le(EECON1bits.WR);
   561                           
   562     073E  1683               	bsf	3,5	;RP0=1, select bank3
   563     073F  1703               	bsf	3,6	;RP1=1, select bank3
   564     0740  188C               	btfsc	12,1	;volsfr
   565     0741  2F43               	goto	u71
   566     0742  2F44               	goto	u70
   567     0743                     u71:
   568     0743  2F3E               	goto	l29
   569     0744                     u70:
   570     0744                     l677:
   571                           
   572                           ;main.c: 31:     EEADR = Address;
   573     0744  0871               	movf	Write@Address,w
   574     0745  1283               	bcf	3,5	;RP0=0, select bank2
   575     0746  1703               	bsf	3,6	;RP1=1, select bank2
   576     0747  008D               	movwf	13	;volatile
   577                           
   578                           ;main.c: 32:     EEDATA = Data;
   579     0748  0870               	movf	Write@Data,w
   580     0749  008C               	movwf	12	;volatile
   581     074A                     l679:
   582                           
   583                           ;main.c: 33:     EECON1bits.EEPGD = 0;
   584     074A  1683               	bsf	3,5	;RP0=1, select bank3
   585     074B  1703               	bsf	3,6	;RP1=1, select bank3
   586     074C  138C               	bcf	12,7	;volsfr
   587     074D                     l681:
   588                           
   589                           ;main.c: 34:     EECON1bits.WREN = 1;
   590     074D  150C               	bsf	12,2	;volsfr
   591     074E                     l683:
   592                           
   593                           ;main.c: 35:     INTCONbits.GIE = 0;
   594     074E  138B               	bcf	11,7	;volatile
   595                           
   596                           ;main.c: 36:     EECON2 = 0x55;
   597     074F  3055               	movlw	85
   598     0750  008D               	movwf	13	;volsfr
   599     0751                     l685:
   600                           
   601                           ;main.c: 38:     EECON1bits.WR = 1;
   602     0751  148C               	bsf	12,1	;volsfr
   603     0752                     l687:
   604                           
   605                           ;main.c: 39:     INTCONbits.GIE = 1;
   606     0752  178B               	bsf	11,7	;volatile
   607     0753                     l689:
   608                           
   609                           ;main.c: 40:     EECON1bits.WREN = 0;
   610     0753  110C               	bcf	12,2	;volsfr
   611     0754                     l691:
   612                           
   613                           ;main.c: 41:     EECON1bits.WR = 0;
   614     0754  108C               	bcf	12,1	;volsfr
   615     0755                     l32:
   616     0755  0008               	return
   617     0756                     __end_of_Write:
   618                           
   619                           	psect	text2
   620     072E                     __ptext2:	
   621 ;; *************** function _Read *****************
   622 ;; Defined at:
   623 ;;		line 44 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  Address         1    wreg     unsigned char 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  Address         1    0[COMMON] unsigned char 
   628 ;;  Data            1    1[COMMON] unsigned char 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      unsigned char 
   631 ;; Registers used:
   632 ;;		wreg
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         2       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0
   641 ;;      Totals:         2       0       0       0       0
   642 ;;Total ram usage:        2 bytes
   643 ;; Hardware stack levels used: 1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651     072E                     _Read:	
   652                           ;psect for function _Read
   653                           
   654                           
   655                           ;incstack = 0
   656                           ; Regs used in _Read: [wreg]
   657                           ;Read@Address stored from wreg
   658     072E  00F0               	movwf	Read@Address
   659     072F                     l611:
   660                           
   661                           ;main.c: 44: uint8_t Read(uint8_t Address);main.c: 45: {;main.c: 46:     uint8_t Data;;m
      +                          ain.c: 47:     EEADR = Address;
   662     072F  0870               	movf	Read@Address,w
   663     0730  1283               	bcf	3,5	;RP0=0, select bank2
   664     0731  1703               	bsf	3,6	;RP1=1, select bank2
   665     0732  008D               	movwf	13	;volatile
   666     0733                     l613:
   667                           
   668                           ;main.c: 48:     EECON1bits.EEPGD = 0;
   669     0733  1683               	bsf	3,5	;RP0=1, select bank3
   670     0734  1703               	bsf	3,6	;RP1=1, select bank3
   671     0735  138C               	bcf	12,7	;volsfr
   672     0736                     l615:
   673                           
   674                           ;main.c: 49:     EECON1bits.RD = 1;
   675     0736  140C               	bsf	12,0	;volsfr
   676                           
   677                           ;main.c: 50:     Data = EEDATA;
   678     0737  1283               	bcf	3,5	;RP0=0, select bank2
   679     0738  1703               	bsf	3,6	;RP1=1, select bank2
   680     0739  080C               	movf	12,w	;volatile
   681     073A  00F1               	movwf	Read@Data
   682                           
   683                           ;main.c: 51:     return Data;
   684     073B  0871               	movf	Read@Data,w
   685     073C                     l35:
   686     073C  0008               	return
   687     073D                     __end_of_Read:
   688     007E                     btemp	set	126	;btemp
   689     007E                     wtemp0	set	126
   690                           
   691                           	psect	config
   692                           
   693                           ;Config register CONFIG @ 0x2007
   694                           ;	Oscillator Selection bits
   695                           ;	FOSC = HS, HS oscillator
   696                           ;	Watchdog Timer Enable bit
   697                           ;	WDTE = OFF, WDT disabled
   698                           ;	Power-up Timer Enable bit
   699                           ;	PWRTE = OFF, PWRT disabled
   700                           ;	Brown-out Reset Enable bit
   701                           ;	BOREN = ON, BOR enabled
   702                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   703                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   704                           ;	Data EEPROM Memory Code Protection bit
   705                           ;	CPD = OFF, Data EEPROM code protection off
   706                           ;	Flash Program Memory Write Enable bits
   707                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   708                           ;	In-Circuit Debugger Mode bit
   709                           ;	DEBUG = 0x1, unprogrammed default
   710                           ;	Flash Program Memory Code Protection bit
   711                           ;	CP = OFF, Code protection off
   712     2007                     	org	8199
   713     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Read
    _main->_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     443
                                              2 COMMON     6     6      0
                               _Read
                              _Write
 ---------------------------------------------------------------------------------
 (1) _Write                                                2     1      1     272
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Read                                                 2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read
   _Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jun 14 11:13:34 2024

            main@CurAddr 0077                       l32 0755                       l35 073C  
                     l29 073E                       u70 0744                       u71 0743  
                     u80 0767                       u81 0766                       u90 0782  
                     u91 0781                      l611 072F                      l613 0733  
                    l701 0761                      l615 0736                      l711 0782  
                    l703 0767                      l721 07A5                      l713 078A  
                    l705 076F                      l723 07A9                      l715 078E  
                    l707 0773                      l741 07D8                      l733 07BB  
                    l725 07B2                      l717 0797                      l709 077C  
                    l743 07E5                      l735 07C4                      l727 07B8  
                    l719 079D                      l681 074D                      l745 07EB  
                    l737 07C8                      l691 0754                      l683 074E  
                    l675 073E                      l739 07D5                      l685 0751  
                    l677 0744                      l693 0756                      l687 0752  
                    l679 074A                      l695 075A                      l689 0753  
                    l697 075D                      l699 0760                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    u100 079D                      u101 079C                      u110 07B8  
                    u111 07B7                      u120 07F8                      u121 07F7  
                    u125 07F4                      u137 0777                      u147 0792  
                    u157 07AD                      u167 07CE                      u177 07DE  
            Read@Address 0070                     _Read 072E                     _main 0756  
                   btemp 007E                     start 0000                    ?_Read 0070  
                  ?_main 0070                    _EEADR 010D                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _Write 073D  
                  main@i 0075                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_Read 073D             __end_of_main 07FC  
                 ??_Read 0070                   ??_main 0072                   ?_Write 0070  
                 _EEDATA 010C                   _EECON2 018D             Write@Address 0071  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_Write 0756  
                ??_Write 0071               __pmaintext 0756                  __ptext1 073D  
                __ptext2 072E     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002                Write@Data 0070                 Read@Data 0071  
             _EECON1bits 018C               _INTCONbits 000B  
