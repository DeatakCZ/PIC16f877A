

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jun 13 14:56:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0015                     _CCPR1L	set	21
   166     0092                     _TMR2ON	set	146
   167     0091                     _T2CKPS1	set	145
   168     0090                     _T2CKPS0	set	144
   169     00BA                     _CCP1M2	set	186
   170     00BB                     _CCP1M3	set	187
   171     00BD                     _CCP1X	set	189
   172     00BC                     _CCP1Y	set	188
   173     0092                     _PR2	set	146
   174     043A                     _TRISC2	set	1082
   175                           
   176                           	psect	cinit
   177     07FC                     start_initialization:	
   178                           ; #config settings
   179                           
   180     07FC                     __initialization:
   181     07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     07FC                     __end_of__initialization:
   185     07FC  0183               	clrf	3
   186     07FD  120A  118A  2F82   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189     0070                     __pcstackCOMMON:
   190     0070                     ?_PWM1_Set_Duty:
   191     0070                     ?_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194     0070                     PWM1_Set_Duty@DC:	
   195                           ; 1 bytes @ 0x0
   196                           
   197                           
   198                           ; 2 bytes @ 0x0
   199     0070                     	ds	2
   200     0072                     ??_PWM1_Set_Duty:
   201                           
   202                           ; 1 bytes @ 0x2
   203     0072                     	ds	2
   204     0074                     ??_main:
   205                           
   206                           ; 1 bytes @ 0x4
   207     0074                     	ds	2
   208     0076                     main@Rise:
   209                           
   210                           ; 1 bytes @ 0x6
   211     0076                     	ds	1
   212     0077                     main@DC:
   213                           
   214                           ; 2 bytes @ 0x7
   215     0077                     	ds	2
   216                           
   217                           	psect	maintext
   218     0782                     __pmaintext:	
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 35 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  DC              2    7[COMMON] unsigned short 
   229 ;;  Rise            1    6[COMMON] _Bool 
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : B00/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   239 ;;      Params:         0       0       0       0       0
   240 ;;      Locals:         3       0       0       0       0
   241 ;;      Temps:          2       0       0       0       0
   242 ;;      Totals:         5       0       0       0       0
   243 ;;Total ram usage:        5 bytes
   244 ;; Hardware stack levels required when called: 1
   245 ;; This function calls:
   246 ;;		_PWM1_Set_Duty
   247 ;; This function is called by:
   248 ;;		Startup code after reset
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252     0782                     _main:	
   253                           ;psect for function _main
   254                           
   255     0782                     l646:	
   256                           ;incstack = 0
   257                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   258                           
   259                           
   260                           ;main.c: 36:     CCP1M3 = 1;
   261     0782  1283               	bcf	3,5	;RP0=0, select bank0
   262     0783  1303               	bcf	3,6	;RP1=0, select bank0
   263     0784  1597               	bsf	23,3	;volatile
   264                           
   265                           ;main.c: 37:     CCP1M2 = 1;
   266     0785  1517               	bsf	23,2	;volatile
   267                           
   268                           ;main.c: 38:     TRISC2 = 0;
   269     0786  1683               	bsf	3,5	;RP0=1, select bank1
   270     0787  1303               	bcf	3,6	;RP1=0, select bank1
   271     0788  1107               	bcf	7,2	;volatile
   272     0789                     l648:
   273                           
   274                           ;main.c: 39:     PR2 = 124;
   275     0789  307C               	movlw	124
   276     078A  0092               	movwf	18	;volatile
   277     078B                     l650:
   278                           
   279                           ;main.c: 41:     T2CKPS0 = 1;
   280     078B  1283               	bcf	3,5	;RP0=0, select bank0
   281     078C  1303               	bcf	3,6	;RP1=0, select bank0
   282     078D  1412               	bsf	18,0	;volatile
   283     078E                     l652:
   284                           
   285                           ;main.c: 42:     T2CKPS1 = 0;
   286     078E  1092               	bcf	18,1	;volatile
   287     078F                     l654:
   288                           
   289                           ;main.c: 44:     TMR2ON = 1;
   290     078F  1512               	bsf	18,2	;volatile
   291     0790                     l656:
   292     0790                     l658:
   293                           
   294                           ;main.c: 47:     _Bool Rise = 1;
   295     0790  01F6               	clrf	main@Rise
   296     0791  0AF6               	incf	main@Rise,f
   297     0792                     l660:
   298                           
   299                           ;main.c: 50:     {;main.c: 51:         DC = 0;
   300     0792  01F7               	clrf	main@DC
   301     0793  01F8               	clrf	main@DC+1
   302                           
   303                           ;main.c: 53:         while(DC<500)
   304     0794  2FAD               	goto	l668
   305     0795                     l662:
   306                           
   307                           ;main.c: 54:         {;main.c: 55:             PWM1_Set_Duty(DC);
   308     0795  0878               	movf	main@DC+1,w
   309     0796  00F1               	movwf	PWM1_Set_Duty@DC+1
   310     0797  0877               	movf	main@DC,w
   311     0798  00F0               	movwf	PWM1_Set_Duty@DC
   312     0799  120A  118A  2761  120A  118A  	fcall	_PWM1_Set_Duty
   313     079E                     l664:
   314                           
   315                           ;main.c: 56:             DC++;
   316     079E  3001               	movlw	1
   317     079F  07F7               	addwf	main@DC,f
   318     07A0  1803               	skipnc
   319     07A1  0AF8               	incf	main@DC+1,f
   320     07A2  3000               	movlw	0
   321     07A3  07F8               	addwf	main@DC+1,f
   322     07A4                     l666:
   323                           
   324                           ;main.c: 57:             _delay((unsigned long)((20)*(4000000/4000.0)));
   325     07A4  301A               	movlw	26
   326     07A5  00F5               	movwf	??_main+1
   327     07A6  30F8               	movlw	248
   328     07A7  00F4               	movwf	??_main
   329     07A8                     u177:
   330     07A8  0BF4               	decfsz	??_main,f
   331     07A9  2FA8               	goto	u177
   332     07AA  0BF5               	decfsz	??_main+1,f
   333     07AB  2FA8               	goto	u177
   334     07AC  0000               	nop
   335     07AD                     l668:
   336                           
   337                           ;main.c: 53:         while(DC<500)
   338     07AD  3001               	movlw	1
   339     07AE  0278               	subwf	main@DC+1,w
   340     07AF  30F4               	movlw	244
   341     07B0  1903               	skipnz
   342     07B1  0277               	subwf	main@DC,w
   343     07B2  1C03               	skipc
   344     07B3  2FB5               	goto	u121
   345     07B4  2FB6               	goto	u120
   346     07B5                     u121:
   347     07B5  2F95               	goto	l662
   348     07B6                     u120:
   349     07B6  2FCE               	goto	l676
   350     07B7                     l670:
   351                           
   352                           ;main.c: 61:         {;main.c: 62:             PWM1_Set_Duty(DC);
   353     07B7  0878               	movf	main@DC+1,w
   354     07B8  00F1               	movwf	PWM1_Set_Duty@DC+1
   355     07B9  0877               	movf	main@DC,w
   356     07BA  00F0               	movwf	PWM1_Set_Duty@DC
   357     07BB  120A  118A  2761  120A  118A  	fcall	_PWM1_Set_Duty
   358     07C0                     l672:
   359                           
   360                           ;main.c: 63:             DC--;
   361     07C0  3001               	movlw	1
   362     07C1  02F7               	subwf	main@DC,f
   363     07C2  3000               	movlw	0
   364     07C3  1C03               	skipc
   365     07C4  03F8               	decf	main@DC+1,f
   366     07C5  02F8               	subwf	main@DC+1,f
   367     07C6                     l674:
   368                           
   369                           ;main.c: 64:             _delay((unsigned long)((5)*(4000000/4000.0)));
   370     07C6  3007               	movlw	7
   371     07C7  00F5               	movwf	??_main+1
   372     07C8  307D               	movlw	125
   373     07C9  00F4               	movwf	??_main
   374     07CA                     u187:
   375     07CA  0BF4               	decfsz	??_main,f
   376     07CB  2FCA               	goto	u187
   377     07CC  0BF5               	decfsz	??_main+1,f
   378     07CD  2FCA               	goto	u187
   379     07CE                     l676:
   380                           
   381                           ;main.c: 60:         while(DC>0)
   382     07CE  0877               	movf	main@DC,w
   383     07CF  0478               	iorwf	main@DC+1,w
   384     07D0  1D03               	btfss	3,2
   385     07D1  2FD3               	goto	u131
   386     07D2  2FD4               	goto	u130
   387     07D3                     u131:
   388     07D3  2FB7               	goto	l670
   389     07D4                     u130:
   390     07D4                     l678:
   391                           
   392                           ;main.c: 67:         _delay((unsigned long)((100)*(4000000/4000.0)));
   393     07D4  3082               	movlw	130
   394     07D5  00F5               	movwf	??_main+1
   395     07D6  30DD               	movlw	221
   396     07D7  00F4               	movwf	??_main
   397     07D8                     u197:
   398     07D8  0BF4               	decfsz	??_main,f
   399     07D9  2FD8               	goto	u197
   400     07DA  0BF5               	decfsz	??_main+1,f
   401     07DB  2FD8               	goto	u197
   402     07DC  2FDD               	nop2
   403     07DD                     l680:
   404                           
   405                           ;main.c: 69:         if(Rise)
   406     07DD  0876               	movf	main@Rise,w
   407     07DE  1903               	btfsc	3,2
   408     07DF  2FE1               	goto	u141
   409     07E0  2FE2               	goto	u140
   410     07E1                     u141:
   411     07E1  2FE9               	goto	l684
   412     07E2                     u140:
   413     07E2                     l682:
   414                           
   415                           ;main.c: 70:             PR2++;
   416     07E2  3001               	movlw	1
   417     07E3  00FF               	movwf	btemp+1
   418     07E4  087F               	movf	btemp+1,w
   419     07E5  1683               	bsf	3,5	;RP0=1, select bank1
   420     07E6  1303               	bcf	3,6	;RP1=0, select bank1
   421     07E7  0792               	addwf	18,f	;volatile
   422     07E8  2FED               	goto	l39
   423     07E9                     l684:
   424                           
   425                           ;main.c: 72:             PR2--;
   426     07E9  3001               	movlw	1
   427     07EA  1683               	bsf	3,5	;RP0=1, select bank1
   428     07EB  1303               	bcf	3,6	;RP1=0, select bank1
   429     07EC  0292               	subwf	18,f	;volatile
   430     07ED                     l39:
   431                           
   432                           ;main.c: 74:         if(PR2==255)
   433     07ED  0A12               	incf	18,w	;volatile
   434     07EE  1D03               	btfss	3,2
   435     07EF  2FF1               	goto	u151
   436     07F0  2FF2               	goto	u150
   437     07F1                     u151:
   438     07F1  2FF3               	goto	l688
   439     07F2                     u150:
   440     07F2                     l686:
   441                           
   442                           ;main.c: 75:             Rise = 0;
   443     07F2  01F6               	clrf	main@Rise
   444     07F3                     l688:
   445                           
   446                           ;main.c: 76:         if(PR2==0)
   447     07F3  0812               	movf	18,w	;volatile
   448     07F4  1D03               	btfss	3,2
   449     07F5  2FF7               	goto	u161
   450     07F6  2FF8               	goto	u160
   451     07F7                     u161:
   452     07F7  2F92               	goto	l660
   453     07F8                     u160:
   454     07F8  2F90               	goto	l658
   455     07F9  120A  118A  2800   	ljmp	start
   456     07FC                     __end_of_main:
   457                           
   458                           	psect	text1
   459     0761                     __ptext1:	
   460 ;; *************** function _PWM1_Set_Duty *****************
   461 ;; Defined at:
   462 ;;		line 25 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  DC              2    0[COMMON] unsigned short 
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         2       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          2       0       0       0       0
   479 ;;      Totals:         4       0       0       0       0
   480 ;;Total ram usage:        4 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489     0761                     _PWM1_Set_Duty:	
   490                           ;psect for function _PWM1_Set_Duty
   491                           
   492     0761                     l640:	
   493                           ;incstack = 0
   494                           ; Regs used in _PWM1_Set_Duty: [wreg+status,2+status,0]
   495                           
   496                           
   497                           ;main.c: 25: void PWM1_Set_Duty(uint16_t DC);main.c: 26: {;main.c: 27:     if(DC < 1024)
   498     0761  3004               	movlw	4
   499     0762  0271               	subwf	PWM1_Set_Duty@DC+1,w
   500     0763  3000               	movlw	0
   501     0764  1903               	skipnz
   502     0765  0270               	subwf	PWM1_Set_Duty@DC,w
   503     0766  1803               	skipnc
   504     0767  2F69               	goto	u91
   505     0768  2F6A               	goto	u90
   506     0769                     u91:
   507     0769  2F81               	goto	l26
   508     076A                     u90:
   509     076A                     l642:
   510                           
   511                           ;main.c: 28:     {;main.c: 29:         CCP1Y = DC & 1;
   512     076A  1870               	btfsc	PWM1_Set_Duty@DC,0
   513     076B  2F6D               	goto	u101
   514     076C  2F71               	goto	u100
   515     076D                     u101:
   516     076D  1283               	bcf	3,5	;RP0=0, select bank0
   517     076E  1303               	bcf	3,6	;RP1=0, select bank0
   518     076F  1617               	bsf	23,4	;volatile
   519     0770  2F74               	goto	u114
   520     0771                     u100:
   521     0771  1283               	bcf	3,5	;RP0=0, select bank0
   522     0772  1303               	bcf	3,6	;RP1=0, select bank0
   523     0773  1217               	bcf	23,4	;volatile
   524     0774                     u114:
   525                           
   526                           ;main.c: 30:         CCP1X = DC & 2;
   527     0774  1297               	bcf	23,5	;volatile
   528     0775                     l644:
   529                           
   530                           ;main.c: 31:         CCPR1L = DC >> 2;
   531     0775  0871               	movf	PWM1_Set_Duty@DC+1,w
   532     0776  00F3               	movwf	??_PWM1_Set_Duty+1
   533     0777  0870               	movf	PWM1_Set_Duty@DC,w
   534     0778  00F2               	movwf	??_PWM1_Set_Duty
   535     0779  1003               	clrc
   536     077A  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   537     077B  0CF2               	rrf	??_PWM1_Set_Duty,f
   538     077C  1003               	clrc
   539     077D  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   540     077E  0CF2               	rrf	??_PWM1_Set_Duty,f
   541     077F  0872               	movf	??_PWM1_Set_Duty,w
   542     0780  0095               	movwf	21	;volatile
   543     0781                     l26:
   544     0781  0008               	return
   545     0782                     __end_of_PWM1_Set_Duty:
   546     007E                     btemp	set	126	;btemp
   547     007E                     wtemp0	set	126
   548                           
   549                           	psect	config
   550                           
   551                           ;Config register CONFIG @ 0x2007
   552                           ;	Oscillator Selection bits
   553                           ;	FOSC = HS, HS oscillator
   554                           ;	Watchdog Timer Enable bit
   555                           ;	WDTE = OFF, WDT disabled
   556                           ;	Power-up Timer Enable bit
   557                           ;	PWRTE = OFF, PWRT disabled
   558                           ;	Brown-out Reset Enable bit
   559                           ;	BOREN = ON, BOR enabled
   560                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   561                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   562                           ;	Data EEPROM Memory Code Protection bit
   563                           ;	CPD = OFF, Data EEPROM code protection off
   564                           ;	Flash Program Memory Write Enable bits
   565                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   566                           ;	In-Circuit Debugger Mode bit
   567                           ;	DEBUG = 0x1, unprogrammed default
   568                           ;	Flash Program Memory Code Protection bit
   569                           ;	CP = OFF, Code protection off
   570     2007                     	org	8199
   571     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     335
                                              4 COMMON     5     5      0
                      _PWM1_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        4     2      2     218
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Set_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jun 13 14:56:11 2024

                     l26 0781                       l39 07ED                       u90 076A  
                     u91 0769                      l640 0761                      l642 076A  
                    l650 078B                      l644 0775                      l660 0792  
                    l652 078E                      l670 07B7                      l662 0795  
                    l654 078F                      l646 0782                      l680 07DD  
                    l672 07C0                      l664 079E                      l656 0790  
                    l648 0789                      l682 07E2                      l674 07C6  
                    l666 07A4                      l658 0790                      l684 07E9  
                    l676 07CE                      l668 07AD                      l686 07F2  
                    l678 07D4                      l688 07F3                      u100 0771  
                    u101 076D                      u120 07B6                      u121 07B5  
                    u114 0774                      u130 07D4                      u131 07D3  
                    u140 07E2                      u141 07E1                      u150 07F2  
                    u151 07F1                      u160 07F8                      u161 07F7  
                    _PR2 0092                      u177 07A8                      u187 07CA  
                    u197 07D8                     _main 0782                     btemp 007E  
                   start 0000                    ?_main 0070                    _CCP1X 00BD  
                  _CCP1Y 00BC                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0074  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCPR1L 0015  
                 _TMR2ON 0092                   _TRISC2 043A                   main@DC 0077  
__end_of__initialization 07FC           __pcstackCOMMON 0070    __end_of_PWM1_Set_Duty 0782  
             __pmaintext 0782                  _T2CKPS0 0090                  _T2CKPS1 0091  
                __ptext1 0761     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002            _PWM1_Set_Duty 0761           ?_PWM1_Set_Duty 0070  
               main@Rise 0076          ??_PWM1_Set_Duty 0072          PWM1_Set_Duty@DC 0070  
