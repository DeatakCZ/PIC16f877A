

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jun 13 15:02:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0015                     _CCPR1L	set	21
   166     0092                     _TMR2ON	set	146
   167     0091                     _T2CKPS1	set	145
   168     0090                     _T2CKPS0	set	144
   169     00BA                     _CCP1M2	set	186
   170     00BB                     _CCP1M3	set	187
   171     00BD                     _CCP1X	set	189
   172     00BC                     _CCP1Y	set	188
   173     0092                     _PR2	set	146
   174     043A                     _TRISC2	set	1082
   175                           
   176                           	psect	cinit
   177     07FC                     start_initialization:	
   178                           ; #config settings
   179                           
   180     07FC                     __initialization:
   181     07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     07FC                     __end_of__initialization:
   185     07FC  0183               	clrf	3
   186     07FD  120A  118A  2F86   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189     0070                     __pcstackCOMMON:
   190     0070                     ?_PWM1_Set_Duty:
   191     0070                     ?_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194     0070                     PWM1_Set_Duty@DC:	
   195                           ; 1 bytes @ 0x0
   196                           
   197                           
   198                           ; 2 bytes @ 0x0
   199     0070                     	ds	2
   200     0072                     ??_PWM1_Set_Duty:
   201                           
   202                           ; 1 bytes @ 0x2
   203     0072                     	ds	2
   204     0074                     ??_main:
   205                           
   206                           ; 1 bytes @ 0x4
   207     0074                     	ds	2
   208     0076                     main@Rise:
   209                           
   210                           ; 1 bytes @ 0x6
   211     0076                     	ds	1
   212     0077                     main@DC:
   213                           
   214                           ; 2 bytes @ 0x7
   215     0077                     	ds	2
   216                           
   217                           	psect	maintext
   218     0786                     __pmaintext:	
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 35 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  DC              2    7[COMMON] unsigned short 
   229 ;;  Rise            1    6[COMMON] _Bool 
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : B00/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   239 ;;      Params:         0       0       0       0       0
   240 ;;      Locals:         3       0       0       0       0
   241 ;;      Temps:          2       0       0       0       0
   242 ;;      Totals:         5       0       0       0       0
   243 ;;Total ram usage:        5 bytes
   244 ;; Hardware stack levels required when called: 1
   245 ;; This function calls:
   246 ;;		_PWM1_Set_Duty
   247 ;; This function is called by:
   248 ;;		Startup code after reset
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252     0786                     _main:	
   253                           ;psect for function _main
   254                           
   255     0786                     l642:	
   256                           ;incstack = 0
   257                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   258                           
   259                           
   260                           ;main.c: 36:     CCP1M3 = 1;
   261     0786  1283               	bcf	3,5	;RP0=0, select bank0
   262     0787  1303               	bcf	3,6	;RP1=0, select bank0
   263     0788  1597               	bsf	23,3	;volatile
   264                           
   265                           ;main.c: 37:     CCP1M2 = 1;
   266     0789  1517               	bsf	23,2	;volatile
   267                           
   268                           ;main.c: 38:     TRISC2 = 0;
   269     078A  1683               	bsf	3,5	;RP0=1, select bank1
   270     078B  1303               	bcf	3,6	;RP1=0, select bank1
   271     078C  1107               	bcf	7,2	;volatile
   272     078D                     l644:
   273                           
   274                           ;main.c: 39:     PR2 = 0;
   275     078D  0192               	clrf	18	;volatile
   276     078E                     l646:
   277                           
   278                           ;main.c: 41:     T2CKPS0 = 1;
   279     078E  1283               	bcf	3,5	;RP0=0, select bank0
   280     078F  1303               	bcf	3,6	;RP1=0, select bank0
   281     0790  1412               	bsf	18,0	;volatile
   282     0791                     l648:
   283                           
   284                           ;main.c: 42:     T2CKPS1 = 0;
   285     0791  1092               	bcf	18,1	;volatile
   286     0792                     l650:
   287                           
   288                           ;main.c: 44:     TMR2ON = 1;
   289     0792  1512               	bsf	18,2	;volatile
   290     0793                     l652:
   291                           
   292                           ;main.c: 47:     _Bool Rise = 1;
   293     0793  01F6               	clrf	main@Rise
   294     0794  0AF6               	incf	main@Rise,f
   295     0795                     l31:	
   296                           ;main.c: 49:     while(1)
   297                           
   298                           
   299                           ;main.c: 50:     {;main.c: 51:         DC = 0;
   300     0795  01F7               	clrf	main@DC
   301     0796  01F8               	clrf	main@DC+1
   302                           
   303                           ;main.c: 53:         while(DC<500)
   304     0797  2FAE               	goto	l660
   305     0798                     l654:
   306                           
   307                           ;main.c: 54:         {;main.c: 55:             PWM1_Set_Duty(DC);
   308     0798  0878               	movf	main@DC+1,w
   309     0799  00F1               	movwf	PWM1_Set_Duty@DC+1
   310     079A  0877               	movf	main@DC,w
   311     079B  00F0               	movwf	PWM1_Set_Duty@DC
   312     079C  120A  118A  2765  120A  118A  	fcall	_PWM1_Set_Duty
   313     07A1                     l656:
   314                           
   315                           ;main.c: 56:             DC++;
   316     07A1  3001               	movlw	1
   317     07A2  07F7               	addwf	main@DC,f
   318     07A3  1803               	skipnc
   319     07A4  0AF8               	incf	main@DC+1,f
   320     07A5  3000               	movlw	0
   321     07A6  07F8               	addwf	main@DC+1,f
   322     07A7                     l658:
   323                           
   324                           ;main.c: 57:             _delay((unsigned long)((1)*(4000000/4000.0)));
   325     07A7  30C7               	movlw	199
   326     07A8  00F4               	movwf	??_main
   327     07A9                     u177:
   328     07A9  2FAA               	nop2
   329     07AA  0BF4               	decfsz	??_main,f
   330     07AB  2FA9               	goto	u177
   331     07AC  2FAD               	nop2
   332     07AD  2FAE               	nop2
   333     07AE                     l660:
   334                           
   335                           ;main.c: 53:         while(DC<500)
   336     07AE  3001               	movlw	1
   337     07AF  0278               	subwf	main@DC+1,w
   338     07B0  30F4               	movlw	244
   339     07B1  1903               	skipnz
   340     07B2  0277               	subwf	main@DC,w
   341     07B3  1C03               	skipc
   342     07B4  2FB6               	goto	u121
   343     07B5  2FB7               	goto	u120
   344     07B6                     u121:
   345     07B6  2F98               	goto	l654
   346     07B7                     u120:
   347     07B7  2FCE               	goto	l668
   348     07B8                     l662:
   349                           
   350                           ;main.c: 61:         {;main.c: 62:             PWM1_Set_Duty(DC);
   351     07B8  0878               	movf	main@DC+1,w
   352     07B9  00F1               	movwf	PWM1_Set_Duty@DC+1
   353     07BA  0877               	movf	main@DC,w
   354     07BB  00F0               	movwf	PWM1_Set_Duty@DC
   355     07BC  120A  118A  2765  120A  118A  	fcall	_PWM1_Set_Duty
   356     07C1                     l664:
   357                           
   358                           ;main.c: 63:             DC--;
   359     07C1  3001               	movlw	1
   360     07C2  02F7               	subwf	main@DC,f
   361     07C3  3000               	movlw	0
   362     07C4  1C03               	skipc
   363     07C5  03F8               	decf	main@DC+1,f
   364     07C6  02F8               	subwf	main@DC+1,f
   365     07C7                     l666:
   366                           
   367                           ;main.c: 64:             _delay((unsigned long)((1)*(4000000/4000.0)));
   368     07C7  30C7               	movlw	199
   369     07C8  00F4               	movwf	??_main
   370     07C9                     u187:
   371     07C9  2FCA               	nop2
   372     07CA  0BF4               	decfsz	??_main,f
   373     07CB  2FC9               	goto	u187
   374     07CC  2FCD               	nop2
   375     07CD  2FCE               	nop2
   376     07CE                     l668:
   377                           
   378                           ;main.c: 60:         while(DC>0)
   379     07CE  0877               	movf	main@DC,w
   380     07CF  0478               	iorwf	main@DC+1,w
   381     07D0  1D03               	btfss	3,2
   382     07D1  2FD3               	goto	u131
   383     07D2  2FD4               	goto	u130
   384     07D3                     u131:
   385     07D3  2FB8               	goto	l662
   386     07D4                     u130:
   387     07D4                     l670:
   388                           
   389                           ;main.c: 67:         _delay((unsigned long)((2)*(4000000/4000.0)));
   390     07D4  3003               	movlw	3
   391     07D5  00F5               	movwf	??_main+1
   392     07D6  3097               	movlw	151
   393     07D7  00F4               	movwf	??_main
   394     07D8                     u197:
   395     07D8  0BF4               	decfsz	??_main,f
   396     07D9  2FD8               	goto	u197
   397     07DA  0BF5               	decfsz	??_main+1,f
   398     07DB  2FD8               	goto	u197
   399     07DC  2FDD               	nop2
   400     07DD                     l672:
   401                           
   402                           ;main.c: 70:         if(Rise)
   403     07DD  0876               	movf	main@Rise,w
   404     07DE  1903               	btfsc	3,2
   405     07DF  2FE1               	goto	u141
   406     07E0  2FE2               	goto	u140
   407     07E1                     u141:
   408     07E1  2FE9               	goto	l676
   409     07E2                     u140:
   410     07E2                     l674:
   411                           
   412                           ;main.c: 71:             PR2++;
   413     07E2  3001               	movlw	1
   414     07E3  00FF               	movwf	btemp+1
   415     07E4  087F               	movf	btemp+1,w
   416     07E5  1683               	bsf	3,5	;RP0=1, select bank1
   417     07E6  1303               	bcf	3,6	;RP1=0, select bank1
   418     07E7  0792               	addwf	18,f	;volatile
   419     07E8  2FED               	goto	l39
   420     07E9                     l676:
   421                           
   422                           ;main.c: 73:             PR2--;
   423     07E9  3001               	movlw	1
   424     07EA  1683               	bsf	3,5	;RP0=1, select bank1
   425     07EB  1303               	bcf	3,6	;RP1=0, select bank1
   426     07EC  0292               	subwf	18,f	;volatile
   427     07ED                     l39:
   428                           
   429                           ;main.c: 75:         if(PR2==255)
   430     07ED  0A12               	incf	18,w	;volatile
   431     07EE  1D03               	btfss	3,2
   432     07EF  2FF1               	goto	u151
   433     07F0  2FF2               	goto	u150
   434     07F1                     u151:
   435     07F1  2FF3               	goto	l680
   436     07F2                     u150:
   437     07F2                     l678:
   438                           
   439                           ;main.c: 76:             Rise = 0;
   440     07F2  01F6               	clrf	main@Rise
   441     07F3                     l680:
   442                           
   443                           ;main.c: 77:         if(PR2==0)
   444     07F3  0812               	movf	18,w	;volatile
   445     07F4  1D03               	btfss	3,2
   446     07F5  2FF7               	goto	u161
   447     07F6  2FF8               	goto	u160
   448     07F7                     u161:
   449     07F7  2F95               	goto	l31
   450     07F8                     u160:
   451     07F8  2F93               	goto	l652
   452     07F9  120A  118A  2800   	ljmp	start
   453     07FC                     __end_of_main:
   454                           
   455                           	psect	text1
   456     0765                     __ptext1:	
   457 ;; *************** function _PWM1_Set_Duty *****************
   458 ;; Defined at:
   459 ;;		line 25 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  DC              2    0[COMMON] unsigned short 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2, status,0
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         2       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          2       0       0       0       0
   476 ;;      Totals:         4       0       0       0       0
   477 ;;Total ram usage:        4 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486     0765                     _PWM1_Set_Duty:	
   487                           ;psect for function _PWM1_Set_Duty
   488                           
   489     0765                     l636:	
   490                           ;incstack = 0
   491                           ; Regs used in _PWM1_Set_Duty: [wreg+status,2+status,0]
   492                           
   493                           
   494                           ;main.c: 25: void PWM1_Set_Duty(uint16_t DC);main.c: 26: {;main.c: 27:     if(DC < 1024)
   495     0765  3004               	movlw	4
   496     0766  0271               	subwf	PWM1_Set_Duty@DC+1,w
   497     0767  3000               	movlw	0
   498     0768  1903               	skipnz
   499     0769  0270               	subwf	PWM1_Set_Duty@DC,w
   500     076A  1803               	skipnc
   501     076B  2F6D               	goto	u91
   502     076C  2F6E               	goto	u90
   503     076D                     u91:
   504     076D  2F85               	goto	l26
   505     076E                     u90:
   506     076E                     l638:
   507                           
   508                           ;main.c: 28:     {;main.c: 29:         CCP1Y = DC & 1;
   509     076E  1870               	btfsc	PWM1_Set_Duty@DC,0
   510     076F  2F71               	goto	u101
   511     0770  2F75               	goto	u100
   512     0771                     u101:
   513     0771  1283               	bcf	3,5	;RP0=0, select bank0
   514     0772  1303               	bcf	3,6	;RP1=0, select bank0
   515     0773  1617               	bsf	23,4	;volatile
   516     0774  2F78               	goto	u114
   517     0775                     u100:
   518     0775  1283               	bcf	3,5	;RP0=0, select bank0
   519     0776  1303               	bcf	3,6	;RP1=0, select bank0
   520     0777  1217               	bcf	23,4	;volatile
   521     0778                     u114:
   522                           
   523                           ;main.c: 30:         CCP1X = DC & 2;
   524     0778  1297               	bcf	23,5	;volatile
   525     0779                     l640:
   526                           
   527                           ;main.c: 31:         CCPR1L = DC >> 2;
   528     0779  0871               	movf	PWM1_Set_Duty@DC+1,w
   529     077A  00F3               	movwf	??_PWM1_Set_Duty+1
   530     077B  0870               	movf	PWM1_Set_Duty@DC,w
   531     077C  00F2               	movwf	??_PWM1_Set_Duty
   532     077D  1003               	clrc
   533     077E  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   534     077F  0CF2               	rrf	??_PWM1_Set_Duty,f
   535     0780  1003               	clrc
   536     0781  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   537     0782  0CF2               	rrf	??_PWM1_Set_Duty,f
   538     0783  0872               	movf	??_PWM1_Set_Duty,w
   539     0784  0095               	movwf	21	;volatile
   540     0785                     l26:
   541     0785  0008               	return
   542     0786                     __end_of_PWM1_Set_Duty:
   543     007E                     btemp	set	126	;btemp
   544     007E                     wtemp0	set	126
   545                           
   546                           	psect	config
   547                           
   548                           ;Config register CONFIG @ 0x2007
   549                           ;	Oscillator Selection bits
   550                           ;	FOSC = HS, HS oscillator
   551                           ;	Watchdog Timer Enable bit
   552                           ;	WDTE = OFF, WDT disabled
   553                           ;	Power-up Timer Enable bit
   554                           ;	PWRTE = OFF, PWRT disabled
   555                           ;	Brown-out Reset Enable bit
   556                           ;	BOREN = ON, BOR enabled
   557                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   558                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   559                           ;	Data EEPROM Memory Code Protection bit
   560                           ;	CPD = OFF, Data EEPROM code protection off
   561                           ;	Flash Program Memory Write Enable bits
   562                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   563                           ;	In-Circuit Debugger Mode bit
   564                           ;	DEBUG = 0x1, unprogrammed default
   565                           ;	Flash Program Memory Code Protection bit
   566                           ;	CP = OFF, Code protection off
   567     2007                     	org	8199
   568     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     335
                                              4 COMMON     5     5      0
                      _PWM1_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        4     2      2     218
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Set_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jun 13 15:02:24 2024

                     l31 0795                       l26 0785                       l39 07ED  
                     u90 076E                       u91 076D                      l640 0779  
                    l650 0792                      l642 0786                      l636 0765  
                    l660 07AE                      l652 0793                      l644 078D  
                    l638 076E                      l670 07D4                      l662 07B8  
                    l654 0798                      l646 078E                      l680 07F3  
                    l672 07DD                      l664 07C1                      l656 07A1  
                    l648 0791                      l674 07E2                      l666 07C7  
                    l658 07A7                      l676 07E9                      l668 07CE  
                    l678 07F2                      u100 0775                      u101 0771  
                    u120 07B7                      u121 07B6                      u114 0778  
                    u130 07D4                      u131 07D3                      u140 07E2  
                    u141 07E1                      u150 07F2                      u151 07F1  
                    u160 07F8                      u161 07F7                      _PR2 0092  
                    u177 07A9                      u187 07C9                      u197 07D8  
                   _main 0786                     btemp 007E                     start 0000  
                  ?_main 0070                    _CCP1X 00BD                    _CCP1Y 00BC  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _CCPR1L 0015                   _TMR2ON 0092  
                 _TRISC2 043A                   main@DC 0077  __end_of__initialization 07FC  
         __pcstackCOMMON 0070    __end_of_PWM1_Set_Duty 0786               __pmaintext 0786  
                _T2CKPS0 0090                  _T2CKPS1 0091                  __ptext1 0765  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
          _PWM1_Set_Duty 0765           ?_PWM1_Set_Duty 0070                 main@Rise 0076  
        ??_PWM1_Set_Duty 0072          PWM1_Set_Duty@DC 0070  
